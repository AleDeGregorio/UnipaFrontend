{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\Frontend\\\\src\\\\GestioneProprietario\\\\InserisciProp\\\\inserimentoB&B.js\";\n\n/*CSS FATTO*/\nimport React from \"react\";\nimport { Button, Form, Col, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./InserimentoProprietÃ .css\";\nimport { Redirect } from 'react-router-dom';\n\nclass InserimentoBnB extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setShowSucc = e => {\n      this.setState({\n        success: e\n      });\n    };\n\n    this.setShowErr = e => {\n      this.setState({\n        error: e\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onChangeServizi = e => {\n      if (e.target.checked) {\n        this.setState({\n          listaServiziBB: [...new Set(this.state.listaServiziBB.concat(e.target.id).sort())]\n        });\n      } else {\n        var filtraServizi = this.state.listaServiziBB.filter(servizio => servizio !== e.target.id);\n        this.setState({\n          listaServiziBB: filtraServizi\n        });\n      }\n    };\n\n    this.onSubmitInsert = e => {\n      e.preventDefault();\n      const data1 = {\n        nome_proprieta: this.state.nome_proprieta,\n        indirizzo: this.state.indirizzo,\n        localita: this.state.localita,\n        provincia: this.state.provincia,\n        tipo_proprieta: 'bb',\n        servizi: this.state.listaServiziBB,\n        ref_proprietario: this.state.ref_proprietario,\n        descrizione: this.state.descrizione\n      };\n      fetch('http://localhost:9000/insertProprieta/new', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data1)\n      }).then(result => result.text()).then(result => {\n        this.setState({\n          apiResponse: JSON.parse(result)\n        });\n        var res = JSON.parse(result);\n\n        if (res.length < 1 || res.code && res.code === 404) {\n          this.setState({\n            empty: true,\n            errorMessage: res.message\n          });\n        } else if (this.state.apiResponse.status === 'error') {\n          window.scrollTo(0, 0);\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.apiResponse.message\n          });\n        }\n\n        const data2 = {\n          ref_proprieta_bb: this.state.apiResponse.insertId,\n          check_in: this.state.check_in,\n          check_out: this.state.check_out\n        };\n        fetch('http://localhost:9000/insertBB/new', {\n          method: \"POST\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(data2)\n        }).then(result => result.text()).then(result => {\n          this.setState({\n            apiResponse: result\n          });\n          var res2 = JSON.parse(result);\n\n          if (res2.length < 1 || res2.code && res2.code === 404) {\n            this.setState({\n              empty: true,\n              errorMessage: res2.message\n            });\n          } else if (this.state.apiResponse.status === 'error') {\n            window.scrollTo(0, 0);\n            this.setState({\n              error: true\n            });\n            this.setState({\n              errorMessage: this.state.apiResponse.message\n            });\n          } else {\n            localStorage.setObj('user_data', this.state.apiResponse);\n            window.scrollTo(0, 0);\n            this.setState({\n              success: true,\n              error: false\n            }, () => {\n              window.setTimeout(() => {\n                this.setState({\n                  success: false\n                });\n              }, 3000);\n            });\n          }\n        });\n      });\n    };\n\n    this.aggiungiServizio = e => {\n      if (this.state.nuovoServizio !== '') {\n        const data = {\n          servizio: this.state.nuovoServizio\n        };\n        fetch('http://localhost:9000/insertServizio/new', {\n          method: \"POST\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(result => result.text()).then(result => {\n          this.setState({\n            apiResponse: JSON.parse(result)\n          });\n          var res = JSON.parse(result);\n\n          if (res.length < 1 || res.code && res.code === 404) {\n            this.setState({\n              empty: true,\n              errorMessage: res.message\n            });\n          }\n\n          if (this.state.apiResponse.status === 'error') {\n            this.setState({\n              error: true\n            });\n            this.setState({\n              errorMessage: this.state.apiResponse.message\n            });\n          }\n\n          window.location.reload();\n        });\n      }\n    };\n\n    this.state = {\n      nome_proprieta: '',\n      indirizzo: '',\n      localita: '',\n      provincia: '',\n      tipo_proprieta: 'bb',\n      servizi: '',\n      listaServiziBB: [],\n      listaServizi: [],\n      nuovoServizio: '',\n      descrizione: '',\n      ref_proprietario: localStorage.getItem('email'),\n      check_in: '',\n      check_out: '',\n      apiResponse: [],\n      error: false,\n      errorMessage: '',\n      success: false,\n      empty: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:9000/servizi/all', {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(result => result.text()).then(result => {\n      this.setState({\n        listaServizi: JSON.parse(result)\n      });\n\n      if (this.state.listaServizi.status === 'error') {\n        this.setState({\n          error: true\n        });\n        this.setState({\n          errorMessage: this.state.listaServizi.message\n        });\n      }\n    });\n    this.setState({\n      listaServiziBB: this.state.servizi.replace(/\\s*,\\s*/g, \",\").split(',')\n    });\n  }\n\n  render() {\n    if (!localStorage.getItem('logged') || !localStorage.getItem('proprietario')) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: \"Utente non autorizzato\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 14\n        }\n      });\n    } else if (this.state.empty) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerNew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contentNew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }\n      }, \"Si \\xE8 verificato un errore: \", this.state.errorMessage), /*#__PURE__*/React.createElement(Link, {\n        to: \"/InserimentoPropriet\\xE0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, \"Torna indietro\"))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n        show: this.state.success,\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Alert.Heading, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }\n      }, \"Inserimento avvenuto con successo!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      }, \"Le informazioni del tuo nuovo B&B sono state correttamente caricate e memorizzate all'interno del sistema.\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setShowSucc(false),\n        variant: \"outline-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }, \"Ok\"))))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n        show: this.state.error,\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Alert.Heading, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }\n      }, \"Inserimento non avvenuto!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }\n      }, \"Si \\xE8 verificato un errore nell'inserimento dei dati, riprovare.\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setShowErr(false),\n        variant: \"outline-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }\n      }, \"Ok\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerNew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contentNew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmitInsert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }\n      }, \"Compila questo form per inserire il tuo B&B!\"), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"nome_proprieta\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"nome_proprieta\",\n        name: \"nome_proprieta\",\n        placeholder: \"Nome B&B\",\n        onChange: this.onChange,\n        className: \"i\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"localita\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }\n      }, \"Citt\\xE0\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"localita\",\n        name: \"localita\",\n        placeholder: \"Citt\\xE0 B&B\",\n        onChange: this.onChange,\n        className: \"i\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"indirizzo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 17\n        }\n      }, \"Indirizzo\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"indirizzo\",\n        name: \"indirizzo\",\n        placeholder: \"Indirizzo B&B\",\n        onChange: this.onChange,\n        className: \"i\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"provincia\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }\n      }, \"Provincia\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"provincia\",\n        name: \"provincia\",\n        placeholder: \"Provincia B&B\",\n        onChange: this.onChange,\n        className: \"i\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }\n      }, \"Servizi\"), this.state.listaServizi.map(item => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          type: \"checkbox\",\n          name: item.servizio,\n          id: item.servizio,\n          onChange: this.onChangeServizi,\n          label: item.servizio,\n          defaultChecked: this.state.listaServiziBB.includes(item.servizio) ? \"true\" : \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 33\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlTextarea1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }\n      }, \"Inserisci servizio aggiuntivo\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: 1,\n        id: \"nuovoServizio\",\n        name: \"nuovoServizio\",\n        onChange: this.onChange,\n        className: \"i\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 22\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"bottoniAggiungiServizio\",\n        onClick: this.aggiungiServizio,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }\n      }, \"Aggiungi servizio\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"descrizione\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 19\n        }\n      }, \"Descrizione\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"descrizione\",\n        name: \"descrizione\",\n        placeholder: \"Descrizione B&B\",\n        onChange: this.onChange,\n        className: \"i\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"check_in\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }\n      }, \"Check-in\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        pattern: \"^([0-9]|1[0-9]|2[0-3]).[0-5][0-9]$\",\n        title: \"Inserire un orario corretto, usando un punto per separare i minuti\",\n        id: \"check_in\",\n        name: \"check_in\",\n        placeholder: \"Orario check-in\",\n        className: \"i\",\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"check_out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }\n      }, \"Check-out\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        pattern: \"^([0-9]|1[0-9]|2[0-3]).[0-5][0-9]$\",\n        title: \"Inserire un orario corretto, usando un punto per separare i minuti\",\n        id: \"check_out\",\n        name: \"check_out\",\n        placeholder: \"Orario check-out\",\n        className: \"i\",\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"bottoniScelta1\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }\n      }, \"Carica\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/InserimentoPropriet\\xE0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }\n      }, \"Torna indietro\")))));\n    }\n  }\n\n}\n\n;\nexport default InserimentoBnB;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/Frontend/src/GestioneProprietario/InserisciProp/inserimentoB&B.js"],"names":["React","Button","Form","Col","Alert","Link","Redirect","InserimentoBnB","Component","constructor","props","setShowSucc","e","setState","success","setShowErr","error","onChange","target","name","value","onChangeServizi","checked","listaServiziBB","Set","state","concat","id","sort","filtraServizi","filter","servizio","onSubmitInsert","preventDefault","data1","nome_proprieta","indirizzo","localita","provincia","tipo_proprieta","servizi","ref_proprietario","descrizione","fetch","method","headers","body","JSON","stringify","then","result","text","apiResponse","parse","res","length","code","empty","errorMessage","message","status","window","scrollTo","data2","ref_proprieta_bb","insertId","check_in","check_out","res2","localStorage","setObj","setTimeout","aggiungiServizio","nuovoServizio","data","location","reload","listaServizi","getItem","componentDidMount","replace","split","render","pathname","fontWeight","map","item","includes"],"mappings":"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","sourcesContent":["/*CSS FATTO*/ \r\n\r\nimport React from \"react\";\r\nimport {Button, Form, Col, Alert} from \"react-bootstrap\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport \"./InserimentoProprietÃ .css\";\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass InserimentoBnB extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      nome_proprieta: '',\r\n      indirizzo: '',\r\n      localita: '',\r\n      provincia: '',\r\n      tipo_proprieta: 'bb',\r\n      servizi: '',\r\n      listaServiziBB: [],\r\n      listaServizi: [],\r\n      nuovoServizio: '',\r\n      descrizione: '',\r\n      ref_proprietario: localStorage.getItem('email'),\r\n      check_in: '',\r\n      check_out: '',\r\n      apiResponse: [],\r\n      error: false,\r\n      errorMessage: '',\r\n      success: false,\r\n      empty: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch('http://localhost:9000/servizi/all', {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    })\r\n    .then((result) => result.text())\r\n    .then((result) => {\r\n        this.setState({ listaServizi: JSON.parse(result) });\r\n    \r\n        if(this.state.listaServizi.status === 'error') {\r\n          this.setState({ error: true });\r\n          this.setState({ errorMessage: this.state.listaServizi.message });\r\n        }\r\n      });\r\n\r\n    this.setState({\r\n      listaServiziBB: this.state.servizi.replace(/\\s*,\\s*/g, \",\").split(',')\r\n    })\r\n  }\r\n\r\n  setShowSucc = (e) => {\r\n    this.setState({ success: e })\r\n  }\r\n\r\n  setShowErr = (e) => {\r\n    this.setState({ error: e })\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeServizi = (e) => {\r\n    if(e.target.checked) {\r\n      this.setState({\r\n        listaServiziBB: [...new Set(this.state.listaServiziBB.concat(e.target.id).sort())]\r\n      });\r\n    }\r\n    else {\r\n      var filtraServizi = this.state.listaServiziBB.filter(servizio => servizio !== e.target.id);\r\n\r\n      this.setState({\r\n        listaServiziBB: filtraServizi\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmitInsert = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data1 = {\r\n      nome_proprieta: this.state.nome_proprieta,\r\n      indirizzo: this.state.indirizzo,\r\n      localita: this.state.localita,\r\n      provincia: this.state.provincia,\r\n      tipo_proprieta: 'bb',\r\n      servizi: this.state.listaServiziBB,\r\n      ref_proprietario: this.state.ref_proprietario,\r\n      descrizione: this.state.descrizione\r\n    }\r\n\r\n    fetch('http://localhost:9000/insertProprieta/new', {\r\n      method: \"POST\",\r\n      headers:{\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data1)\r\n    })\r\n    .then((result) => result.text())\r\n    .then((result) => {\r\n      this.setState({ apiResponse: JSON.parse(result) });\r\n\r\n      var res = JSON.parse(result);\r\n\r\n      if(res.length < 1 || (res.code && res.code === 404)) {\r\n        this.setState({ empty: true, errorMessage: res.message });\r\n      }\r\n\r\n      else if(this.state.apiResponse.status === 'error') {\r\n        window.scrollTo(0, 0);\r\n        this.setState({ error: true });\r\n        this.setState({ errorMessage: this.state.apiResponse.message });\r\n      }\r\n\r\n      const data2 = {\r\n        ref_proprieta_bb: this.state.apiResponse.insertId,\r\n        check_in: this.state.check_in,\r\n        check_out : this.state.check_out\r\n      };\r\n\r\n      fetch('http://localhost:9000/insertBB/new',{\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data2)\r\n      })\r\n      .then((result) => result.text())\r\n      .then((result) => {\r\n        this.setState({ apiResponse: result });\r\n\r\n        var res2 = JSON.parse(result);\r\n\r\n        if(res2.length < 1 || (res2.code && res2.code === 404)) {\r\n          this.setState({ empty: true, errorMessage: res2.message });\r\n        }\r\n\r\n        else if(this.state.apiResponse.status === 'error') {\r\n          window.scrollTo(0, 0);\r\n          this.setState({ error: true });\r\n          this.setState({ errorMessage: this.state.apiResponse.message });\r\n        }\r\n        else {\r\n          localStorage.setObj('user_data', this.state.apiResponse);\r\n          window.scrollTo(0, 0);\r\n          this.setState({ success: true, error: false },()=>{\r\n              window.setTimeout(()=>{\r\n                this.setState({success:false})\r\n              }, 3000)\r\n          })\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  aggiungiServizio = (e) => {\r\n    if(this.state.nuovoServizio !== '') {\r\n\r\n      const data = {\r\n        servizio: this.state.nuovoServizio\r\n      }\r\n\r\n      fetch('http://localhost:9000/insertServizio/new', {\r\n        method: \"POST\",\r\n        headers:{\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n      .then((result) => result.text())\r\n      .then((result) => {\r\n        this.setState({ apiResponse: JSON.parse(result) });\r\n\r\n        var res = JSON.parse(result);\r\n\r\n        if(res.length < 1 || (res.code && res.code === 404)) {\r\n          this.setState({ empty: true, errorMessage: res.message });\r\n        }\r\n\r\n        if(this.state.apiResponse.status === 'error') {\r\n          this.setState({ error: true });\r\n          this.setState({ errorMessage: this.state.apiResponse.message });\r\n        }\r\n\r\n        window.location.reload();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(!localStorage.getItem('logged') || !localStorage.getItem('proprietario')) {\r\n      return <Redirect\r\n          to={{\r\n              pathname: \"/ErrorPage\",\r\n              state: { \r\n                error: true,\r\n                errorMessage: \"Utente non autorizzato\" \r\n              }\r\n          }}\r\n      />\r\n    }\r\n    else if(this.state.empty) {\r\n      return(\r\n        <div className = \"background\">\r\n        <div className = \"containerNew\">  \r\n            <div className = \"contentNew\">\r\n                <p>Si Ã¨ verificato un errore: {this.state.errorMessage}</p>\r\n            <Link to=\"/InserimentoProprietÃ \">Torna indietro</Link>\r\n        </div>\r\n      </div>\r\n      </div>\r\n       );\r\n    }\r\n    else {\r\n      return(\r\n        <div className = \"background\">\r\n          <>\r\n            <Alert show={this.state.success} variant=\"success\">\r\n            <Alert.Heading style = {{fontWeight: 'bold'}}>Inserimento avvenuto con successo!</Alert.Heading>\r\n            <p>\r\n              Le informazioni del tuo nuovo B&B sono state correttamente caricate e memorizzate all'interno del sistema.\r\n            </p>\r\n            <hr />\r\n            <div className=\"d-flex justify-content-end\">\r\n                <Button onClick={() => this.setShowSucc(false)} variant=\"outline-success\">\r\n                <span style = {{fontWeight: 'bold'}}>Ok</span>\r\n                </Button>\r\n            </div>\r\n            </Alert>\r\n          </>\r\n            <>\r\n                <Alert show={this.state.error} variant=\"danger\">\r\n                <Alert.Heading style = {{fontWeight: 'bold'}}>Inserimento non avvenuto!</Alert.Heading>\r\n                <p>\r\n                  Si Ã¨ verificato un errore nell'inserimento dei dati, riprovare.\r\n                </p>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={() => this.setShowErr(false)} variant=\"outline-success\">\r\n                    <span style = {{fontWeight: 'bold'}}>Ok</span>\r\n                    </Button>\r\n                </div>\r\n                </Alert>\r\n            </>\r\n        <div className = \"containerNew\">  \r\n            <div className = \"contentNew\">\r\n                <form onSubmit = {this.onSubmitInsert}>\r\n                <h2>Compila questo form per inserire il tuo B&B!</h2>\r\n            \r\n                <label htmlFor = \"nome_proprieta\">Nome</label>\r\n                <input\r\n                  type = \"text\"\r\n                  id = \"nome_proprieta\"\r\n                  name = \"nome_proprieta\"\r\n                  placeholder = \"Nome B&B\"\r\n                  onChange = {this.onChange}\r\n                  className = \"i\"\r\n                  required\r\n                />\r\n  \r\n                <label htmlFor = \"localita\">CittÃ </label>\r\n                <input\r\n                  type = \"text\"\r\n                  id = \"localita\"\r\n                  name = \"localita\"\r\n                  placeholder = \"CittÃ  B&B\"\r\n                  onChange = {this.onChange}\r\n                  className = \"i\"\r\n                  required\r\n                />\r\n  \r\n                <label htmlFor = \"indirizzo\">Indirizzo</label>\r\n                <input\r\n                  type = \"text\"\r\n                  id = \"indirizzo\"\r\n                  name = \"indirizzo\"\r\n                  placeholder= \"Indirizzo B&B\"\r\n                  onChange = {this.onChange}\r\n                  className = \"i\"\r\n                  required\r\n                />\r\n             \r\n                <label htmlFor = \"provincia\">Provincia</label>\r\n                <input\r\n                  type = \"text\"\r\n                  id = \"provincia\"\r\n                  name = \"provincia\"\r\n                  placeholder = \"Provincia B&B\"\r\n                  onChange = {this.onChange}\r\n                  className = \"i\"\r\n                  required\r\n                />\r\n  \r\n                    <Form.Row>\r\n                      <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Servizi</Form.Label>\r\n                        {this.state.listaServizi.map(item => {\r\n                            return(\r\n                              <div>\r\n                                <Form.Check\r\n                                  type=\"checkbox\"\r\n                                  name={item.servizio}\r\n                                  id={item.servizio}\r\n                                  onChange={this.onChangeServizi}\r\n                                  label = {item.servizio}\r\n                                  defaultChecked = {this.state.listaServiziBB.includes(item.servizio) ? \"true\" : \"\"}\r\n                                />\r\n                              </div>\r\n                            )\r\n                          })}\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Inserisci servizio aggiuntivo</Form.Label>\r\n                     <Form.Control as=\"textarea\" rows={1} id = 'nuovoServizio' name = 'nuovoServizio' onChange = {this.onChange} className=\"i\" />\r\n                     </Form.Group>\r\n                    <button className=\"bottoniAggiungiServizio\" onClick = {this.aggiungiServizio}>\r\n                      Aggiungi servizio\r\n                    </button>\r\n                    <br/>\r\n                    <br />\r\n                  <label htmlFor = \"descrizione\">Descrizione</label>\r\n                  <input\r\n                  type = \"text\"\r\n                  id = \"descrizione\"\r\n                  name = \"descrizione\"\r\n                  placeholder = \"Descrizione B&B\"\r\n                  onChange = {this.onChange}\r\n                  className = \"i\"\r\n                  required\r\n                />\r\n  \r\n            <label htmlFor=\"check_in\">Check-in</label>\r\n            <input\r\n              type = \"text\"\r\n              pattern = \"^([0-9]|1[0-9]|2[0-3]).[0-5][0-9]$\"\r\n              title = \"Inserire un orario corretto, usando un punto per separare i minuti\"\r\n              id = \"check_in\"\r\n              name = \"check_in\"\r\n              placeholder = \"Orario check-in\"\r\n              className = \"i\"\r\n              onChange = {this.onChange}\r\n            />\r\n  \r\n            <label htmlFor=\"check_out\">Check-out</label>\r\n            <input\r\n              type = \"text\"\r\n              pattern = \"^([0-9]|1[0-9]|2[0-3]).[0-5][0-9]$\"\r\n              title = \"Inserire un orario corretto, usando un punto per separare i minuti\"\r\n              id = \"check_out\"\r\n              name = \"check_out\"\r\n              placeholder = \"Orario check-out\"\r\n              className = \"i\"\r\n              onChange = {this.onChange}\r\n            />\r\n            <button className=\"bottoniScelta1\" type=\"submit\">\r\n              Carica\r\n            </button>\r\n            <Link to=\"/InserimentoProprietÃ \">Torna indietro</Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      </div>\r\n       ); }\r\n    }\r\n};\r\n\r\nexport default InserimentoBnB;"]},"metadata":{},"sourceType":"module"}