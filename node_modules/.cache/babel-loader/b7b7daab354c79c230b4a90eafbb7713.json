{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\Frontend\\\\src\\\\Autenticazione\\\\autenticazioneRegistratiProprietario.js\";\nimport React from 'react';\nimport { Form, Col, Button } from 'react-bootstrap'; //import { Row } from 'react-bootstrap\n\nimport { Link } from 'react-router-dom';\nimport './autenticazione.css';\nimport { Redirect } from 'react-router-dom';\n\nclass autenticazioneRegistratiProprietario extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmitInsert = e => {\n      e.preventDefault();\n\n      if (this.state.password !== this.state.confirmPassword) {\n        this.setState({\n          errorPswd: true\n        });\n        return;\n      }\n\n      const data = {\n        email: this.state.email,\n        password: this.state.password,\n        nome: this.state.nome,\n        cognome: this.state.cognome,\n        nascita: new Date(this.state.nascita).toLocaleDateString(),\n        num_documento: this.state.num_documento,\n        telefono: this.state.telefono\n      };\n      fetch('http://localhost:9000/insertProprietario/new', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.text()).then(result => {\n        var res;\n\n        try {\n          this.setState({\n            apiResponse: JSON.parse(result)\n          });\n          res = JSON.parse(result);\n        } catch (error) {\n          this.setState({\n            apiResponse: result\n          });\n          res = result;\n        }\n\n        if (res.length < 1 || res.code && res.code === 404) {\n          this.setState({\n            empty: true,\n            errorMessage: res.message\n          });\n        } else if (this.state.apiResponse.status && this.state.apiResponse.status === 'error') {\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.apiResponse.message\n          });\n        } else {\n          this.setState({\n            success: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      nome: '',\n      cognome: '',\n      nascita: '',\n      num_documento: '',\n      telefono: '',\n      apiResponse: [],\n      error: false,\n      errorPswd: false,\n      errorMessage: '',\n      success: false,\n      empty: false,\n      maxDate: ''\n    };\n  }\n\n  componentDidMount() {\n    var today = new Date();\n    const offset = today.getTimezoneOffset();\n    today = new Date(today.getTime() - offset * 60 * 1000);\n    this.setState({\n      maxDate: today.toISOString().slice(0, 10)\n    });\n  }\n\n  render() {\n    var pswdError;\n\n    if (this.state.success) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Errore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, \"Registrazione avvenuta con successo!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, \"Effettua pure il login, e comincia a navigare dove preferisci\"));\n    }\n\n    if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: this.state.errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.state.errorMessage) {\n      return /*#__PURE__*/React.createElement(Form, {\n        className: \"contenitoreAutenticazione\",\n        onSubmit: this.props.onSubmitInsert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contentNewCheckAutenticazione\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, \"Iscriviti\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, \"Si \\xE8 verificato un errore: \", this.state.errorMessage), /*#__PURE__*/React.createElement(Link, {\n        to: \"/autenticazioneRegistrati\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, \"Torna indietro\")));\n    }\n\n    if (this.state.errorPswd) {\n      pswdError = /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, \"Password non coincidenti\");\n    }\n\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"contenitoreAutenticazione\",\n      onSubmit: this.onSubmitInsert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contentNewCheckAutenticazione\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \"Iscriviti\"), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, \"Nome\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      placeholder: \"Nome\",\n      id: \"nome\",\n      name: \"nome\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSurname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, \"Cognome\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"surname\",\n      placeholder: \"Cognome\",\n      id: \"cognome\",\n      name: \"cognome\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \"E-mail\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"E-mail\",\n      id: \"email\",\n      name: \"email\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$\",\n      id: \"password\",\n      name: \"password\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, \"Conferma password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      title: \"Almeno 8 caratteri, una lettera maiuscola e un numero\",\n      pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$\",\n      placeholder: \"Conferma password\",\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }), pswdError), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridIndirizzo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, \"Telefono\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"tel\",\n      placeholder: \"Telefono\",\n      id: \"telefono\",\n      name: \"telefono\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridIndirizzo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, \"Numero documento\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"tel\",\n      placeholder: \"Numero documento\",\n      id: \"num_documento\",\n      name: \"num_documento\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridCap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, \"Data di nascita\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      required: true,\n      className: \"inputSignUp\",\n      onChange: this.onChange,\n      id: \"nascita\",\n      name: \"nascita\",\n      max: this.state.maxDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/autenticazioneRegistrati\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, \"Torna indietro\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      className: \"pulsante\",\n      onClick: this.onSubmitInsert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, \"Registrati\"));\n  }\n\n}\n\nexport default autenticazioneRegistratiProprietario;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/Frontend/src/Autenticazione/autenticazioneRegistratiProprietario.js"],"names":["React","Form","Col","Button","Link","Redirect","autenticazioneRegistratiProprietario","Component","constructor","props","onChange","e","setState","target","name","value","onSubmitInsert","preventDefault","state","password","confirmPassword","errorPswd","data","email","nome","cognome","nascita","Date","toLocaleDateString","num_documento","telefono","fetch","method","headers","body","JSON","stringify","then","result","text","res","apiResponse","parse","error","length","code","empty","errorMessage","message","status","success","maxDate","componentDidMount","today","offset","getTimezoneOffset","getTime","toISOString","slice","render","pswdError","pathname","color"],"mappings":"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","sourcesContent":["import React from 'react';    \r\nimport {Form, Col, Button} from 'react-bootstrap'\r\n//import { Row } from 'react-bootstrap\r\nimport {Link} from 'react-router-dom'\r\nimport './autenticazione.css'\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass autenticazioneRegistratiProprietario extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            nome: '',\r\n            cognome: '',\r\n            nascita: '',\r\n            num_documento: '',\r\n            telefono: '',\r\n            apiResponse: [],\r\n            error:false,\r\n            errorPswd: false,\r\n            errorMessage:'',\r\n            success: false, \r\n            empty: false,\r\n            maxDate: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        var today = new Date();\r\n        const offset = today.getTimezoneOffset()\r\n        today = new Date(today.getTime() - (offset*60*1000))\r\n        \r\n        this.setState({ maxDate: today.toISOString().slice(0,10) })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitInsert = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(this.state.password !== this.state.confirmPassword) {\r\n            this.setState({ \r\n                errorPswd: true\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            nome: this.state.nome,\r\n            cognome: this.state.cognome,\r\n            nascita: new Date(this.state.nascita).toLocaleDateString(),\r\n            num_documento: this.state.num_documento,\r\n            telefono: this.state.telefono\r\n        }\r\n\r\n        fetch('http://localhost:9000/insertProprietario/new', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result)=>{\r\n\r\n            var res;\r\n\r\n            try {\r\n\r\n                this.setState({ apiResponse:JSON.parse(result) });\r\n                res = JSON.parse(result);\r\n            } catch(error) {\r\n\r\n                this.setState({ apiResponse:result });\r\n                res = result;\r\n            }\r\n\r\n            if(res.length < 1 || (res.code && res.code === 404)) {\r\n              this.setState({ empty: true, errorMessage: res.message });\r\n            }\r\n      \r\n            else if(this.state.apiResponse.status && this.state.apiResponse.status === 'error') {\r\n              this.setState({ error: true });\r\n              this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n            else {\r\n                this.setState({ success: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var pswdError;\r\n\r\n        if(this.state.success) {\r\n            return (\r\n                <div className = 'Errore'>\r\n                    <h1>Registrazione avvenuta con successo!</h1>\r\n                    <p>Effettua pure il login, e comincia a navigare dove preferisci</p>\r\n                </div>\r\n            );\r\n        }\r\n        if (this.state.error) {\r\n            return <Redirect \r\n            to = {{\r\n              pathname: \"/ErrorPage\",\r\n              state: {\r\n                error: true,\r\n                errorMessage: this.state.errorMessage\r\n              }\r\n            }}\r\n          />\r\n        }\r\n        if(this.state.errorMessage) {\r\n            return (\r\n                <Form className=\"contenitoreAutenticazione\" onSubmit={this.props.onSubmitInsert}>\r\n                    <div className=\"contentNewCheckAutenticazione\">\r\n                        <h2>Iscriviti</h2>\r\n                        <p>Si è verificato un errore: {this.state.errorMessage}</p>\r\n\r\n                        <Link to=\"/autenticazioneRegistrati\">Torna indietro</Link>\r\n                    </div>\r\n                </Form>\r\n            );\r\n        }\r\n        if(this.state.errorPswd) {\r\n            pswdError = (\r\n                <p style = {{color: 'red'}}>Password non coincidenti</p>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Form className=\"contenitoreAutenticazione\" onSubmit={this.onSubmitInsert}>\r\n                <div className=\"contentNewCheckAutenticazione\">\r\n                    <h2>Iscriviti</h2>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridName\">\r\n                        <Form.Label>Nome</Form.Label>\r\n                        <Form.Control \r\n                            type = \"name\" \r\n                            placeholder = \"Nome\" \r\n                            id = 'nome'\r\n                            name = 'nome'\r\n                            onChange = {this.onChange} \r\n                            required \r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridSurname\">\r\n                        <Form.Label>Cognome</Form.Label>\r\n                        <Form.Control \r\n                            type = \"surname\" \r\n                            placeholder = \"Cognome\" \r\n                            id = 'cognome'\r\n                            name = 'cognome'\r\n                            onChange = {this.onChange} \r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>E-mail</Form.Label>\r\n                        <Form.Control \r\n                            type = \"email\" \r\n                            placeholder = \"E-mail\" \r\n                            id = 'email'\r\n                            name = 'email'\r\n                            onChange = {this.onChange} \r\n                            required \r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            type = \"password\" \r\n                            placeholder = \"Password\" \r\n                            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$\"\r\n                            id = 'password'\r\n                            name = 'password'\r\n                            onChange = {this.onChange} \r\n                            required\r\n                        />\r\n                        <Form.Label>Conferma password</Form.Label>\r\n                            <Form.Control \r\n                                type=\"password\" \r\n                                title=\"Almeno 8 caratteri, una lettera maiuscola e un numero\" \r\n                                pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$\"\r\n                                placeholder=\"Conferma password\" \r\n                                id = 'confirmPassword'\r\n                                name = 'confirmPassword'\r\n                                onChange={this.onChange} \r\n                                required/>\r\n                        {pswdError}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridIndirizzo\">\r\n                        <Form.Label>Telefono</Form.Label>\r\n                        <Form.Control \r\n                            type = \"tel\" \r\n                            placeholder = \"Telefono\" \r\n                            id = 'telefono'\r\n                            name = 'telefono'\r\n                            onChange = {this.onChange} \r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridIndirizzo\">\r\n                        <Form.Label>Numero documento</Form.Label>\r\n                        <Form.Control \r\n                            type = \"tel\" \r\n                            placeholder = \"Numero documento\" \r\n                            id = 'num_documento'\r\n                            name = 'num_documento'\r\n                            onChange = {this.onChange} \r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridCap\">\r\n                        <Form.Label>Data di nascita</Form.Label>\r\n                        <Form.Control \r\n                            type=\"date\" \r\n                            required \r\n                            className=\"inputSignUp\" \r\n                            onChange={this.onChange} \r\n                            id = 'nascita'\r\n                            name = 'nascita'\r\n                            max = {this.state.maxDate}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Link to=\"/autenticazioneRegistrati\">Torna indietro</Link>\r\n                </div>\r\n            \r\n                <Button variant=\"primary\" className=\"pulsante\" onClick = {this.onSubmitInsert}>\r\n                    Registrati\r\n                </Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nexport default autenticazioneRegistratiProprietario"]},"metadata":{},"sourceType":"module"}