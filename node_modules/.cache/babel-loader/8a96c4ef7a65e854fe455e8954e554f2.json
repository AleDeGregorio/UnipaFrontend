{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\Frontend\\\\src\\\\GestioneProprietario\\\\Accettazione\\\\ElencoCheck.js\";\nimport React, { Component } from \"react\";\nimport ListItemCheck from \"./ListItemCheck\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { theme } from \"../shared/theme\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Redirect } from 'react-router-dom';\nconst ListWrapper = styled.div`\n  width: ${props => props.theme.maxWidth};\n  max-width: 90%;\n  display: block;\n  margin: auto;\n  padding: 70px 0 20px;\n  position: relative;\n  z-index: 10;\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\n    padding: 90px 0 50px;\n  }\n`;\nconst ListTitle = styled.h2`\n  font-weight: normal;\n  font-size: 22px;\n  margin-bottom: 5px;\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\n    font-size: 28px;\n    margin-bottom: 10px;\n  }\n`;\nconst ListBreadcrumb = styled.div`\n  font-weight: 300;\n  font-size: 14px;\n  margin-bottom: 5px;\n  color: ${props => props.theme.mediumGray};\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\n    margin-bottom: 20px;\n  }\n`;\nconst ListDragItem = styled.div`\n  outline: none;\n  position: relative;\n  z-index: ${props => 99999 - props.order};\n`;\n\nclass ElencoCheck extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reorderItems = (startIndex, endIndex) => {\n      const items = Array.from(this.state.items);\n      const [removed] = items.splice(startIndex, 1);\n      items.splice(endIndex, 0, removed);\n      this.setState({\n        items\n      });\n    };\n\n    this.onDragEnd = result => {\n      const {\n        source,\n        destination\n      } = result;\n      if (!destination) return;\n      this.reorderItems(source.index, destination.index);\n    };\n\n    this.refreshItemsList = id => {\n      this.setState(prevState => {\n        return {\n          items: prevState.items.filter(item => item.id !== id)\n        };\n      });\n    };\n\n    this.state = {\n      listTitle: \"Ecco le prenotazioni Accettate\",\n      listBreadcrumb: \"Scegli tra le prenotazioni presenti per effettuare il check-in\",\n      items: [],\n      apiResponse_accettate: [],\n      email_prop: localStorage.getItem('email'),\n      error: false,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    const data = {\n      ref_proprietario: this.state.email_prop\n    };\n    fetch('http://localhost:9000/getPrenotazioniAccettate/prenotazioniAccettate', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => result.text()).then(result => {\n      this.setState({\n        apiResponse_accettate: JSON.parse(result)\n      });\n      var res = JSON.parse(result);\n\n      for (var i = 0; i < res.length; i++) {\n        this.setState({\n          items: [...this.state.items, {\n            id: i,\n            hasActions: true,\n            image: res[i].img,\n            nome: res[i].nome_proprieta,\n            stanza: res[i].id_stanza ? res[i].id_stanza : '',\n            textValue: res[i].ref_proprieta,\n            id_prenotazione: res[i].id_prenotazione,\n            ref_cliente: res[i].ref_cliente,\n            ref_proprieta: res[i].ref_proprieta,\n            data_partenza: res[i].data_partenza,\n            data_ritorno: res[i].data_ritorno\n          }]\n        });\n      }\n\n      if (this.state.apiResponse_accettate.status === 'error') {\n        this.setState({\n          error: true\n        });\n        this.setState({\n          errorMessage: this.state.apiResponse_accettate.message\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: this.state.errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 14\n        }\n      });\n    } else {\n      const {\n        listTitle,\n        listBreadcrumb,\n        items\n      } = this.state;\n      return /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ListWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, listTitle), /*#__PURE__*/React.createElement(ListBreadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, listBreadcrumb), /*#__PURE__*/React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"droppabe-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, items.map((number, key) => /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: `draggable-${number.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(ListDragItem, Object.assign({\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        order: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ListItemCheck //damodificare\n      , {\n        dati_casa2: this.state.apiResponse_accettate[key] ? this.state.apiResponse_accettate[key] : '',\n        number: number,\n        dragging: snapshot.isDragging,\n        onDeleteItem: this.refreshItemsList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 27\n        }\n      })))))))));\n    }\n  }\n\n}\n\nexport default ElencoCheck;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/Frontend/src/GestioneProprietario/Accettazione/ElencoCheck.js"],"names":["React","Component","ListItemCheck","styled","ThemeProvider","theme","DragDropContext","Droppable","Draggable","Redirect","ListWrapper","div","props","maxWidth","mediumDeviceWidth","ListTitle","h2","ListBreadcrumb","mediumGray","ListDragItem","order","ElencoCheck","constructor","reorderItems","startIndex","endIndex","items","Array","from","state","removed","splice","setState","onDragEnd","result","source","destination","index","refreshItemsList","id","prevState","filter","item","listTitle","listBreadcrumb","apiResponse_accettate","email_prop","localStorage","getItem","error","errorMessage","componentDidMount","data","ref_proprietario","fetch","method","headers","body","JSON","stringify","then","text","parse","res","i","length","hasActions","image","img","nome","nome_proprieta","stanza","id_stanza","textValue","ref_proprieta","id_prenotazione","ref_cliente","data_partenza","data_ritorno","status","message","render","pathname","provided","snapshot","innerRef","map","number","key","draggableProps","dragHandleProps","isDragging"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ListItemCheck from \"./ListItemCheck\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"../shared/theme\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst ListWrapper = styled.div`\r\n  width: ${props => props.theme.maxWidth};\r\n  max-width: 90%;\r\n  display: block;\r\n  margin: auto;\r\n  padding: 70px 0 20px;\r\n  position: relative;\r\n  z-index: 10;\r\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\r\n    padding: 90px 0 50px;\r\n  }\r\n`;\r\nconst ListTitle = styled.h2`\r\n  font-weight: normal;\r\n  font-size: 22px;\r\n  margin-bottom: 5px;\r\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\r\n    font-size: 28px;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nconst ListBreadcrumb = styled.div`\r\n  font-weight: 300;\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n  color: ${props => props.theme.mediumGray};\r\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nconst ListDragItem = styled.div`\r\n  outline: none;\r\n  position: relative;\r\n  z-index: ${props => 99999 - props.order};\r\n`;\r\n\r\nclass ElencoCheck extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      listTitle: \"Ecco le prenotazioni Accettate\",\r\n      listBreadcrumb: \"Scegli tra le prenotazioni presenti per effettuare il check-in\",\r\n      items: [],\r\n      apiResponse_accettate: [],\r\n      email_prop: localStorage.getItem('email'),\r\n      error: false,\r\n      errorMessage: ''\r\n    };\r\n  }\r\n\r\n    componentDidMount() {\r\n        const data = {\r\n            ref_proprietario: this.state.email_prop\r\n        };\r\n\r\n        fetch('http://localhost:9000/getPrenotazioniAccettate/prenotazioniAccettate', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result) => {\r\n            this.setState({ apiResponse_accettate: JSON.parse(result) });\r\n            var res = JSON.parse(result);\r\n\r\n\r\n            for(var i = 0; i < res.length; i++) {\r\n              this.setState({\r\n                items: [...this.state.items, {\r\n                  id: i,\r\n                  hasActions: true,\r\n                  image: res[i].img,\r\n                  nome: res[i].nome_proprieta,\r\n                  stanza: res[i].id_stanza ? res[i].id_stanza : '',\r\n                  textValue: res[i].ref_proprieta,\r\n                  id_prenotazione: res[i].id_prenotazione,\r\n                  ref_cliente: res[i].ref_cliente,\r\n                  ref_proprieta:res[i].ref_proprieta,\r\n                  data_partenza:res[i].data_partenza,\r\n                  data_ritorno:res[i].data_ritorno              \r\n                }]\r\n              });\r\n            }\r\n            if(this.state.apiResponse_accettate.status === 'error') {\r\n                this.setState({ error: true });\r\n                this.setState({ errorMessage: this.state.apiResponse_accettate.message });\r\n            }\r\n        });\r\n    }\r\n\r\n       \r\n  reorderItems = (startIndex, endIndex) => {\r\n    const items = Array.from(this.state.items);\r\n    const [removed] = items.splice(startIndex, 1);\r\n    items.splice(endIndex, 0, removed);\r\n    this.setState({ items });\r\n  };\r\n\r\n  onDragEnd = result => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n    this.reorderItems(source.index, destination.index);\r\n  };\r\n\r\n  refreshItemsList = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        items: prevState.items.filter(item => item.id !== id)\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n  if(this.state.error) {\r\n      return <Redirect\r\n          to={{\r\n              pathname: \"/ErrorPage\",\r\n              state: { \r\n                  error: true,\r\n                  errorMessage: this.state.errorMessage \r\n              }\r\n          }}\r\n      />\r\n  }\r\n  else {\r\n    const { listTitle, listBreadcrumb, items } = this.state;\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <ListWrapper>\r\n          <ListTitle>{listTitle}</ListTitle>\r\n          <ListBreadcrumb>{listBreadcrumb}</ListBreadcrumb>\r\n          <DragDropContext onDragEnd={this.onDragEnd}>\r\n            <Droppable droppableId=\"droppabe-list\">\r\n              {(provided, snapshot) => (\r\n                <div ref={provided.innerRef}>\r\n                  {items.map((number, key) => (\r\n                    <Draggable\r\n                      draggableId={`draggable-${number.id}`}\r\n                    \r\n                    >\r\n                      {(provided, snapshot) => (\r\n                        <ListDragItem\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          order={key}\r\n                        >\r\n                          <ListItemCheck //damodificare\r\n                            \r\n                           dati_casa2 = {this.state.apiResponse_accettate[key] ? this.state.apiResponse_accettate[key] : ''}\r\n                            number={number}\r\n                            dragging={snapshot.isDragging}\r\n                            onDeleteItem={this.refreshItemsList}\r\n                          />\r\n                        </ListDragItem>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </ListWrapper>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n  }\r\n}\r\n\r\nexport default ElencoCheck;"]},"metadata":{},"sourceType":"module"}