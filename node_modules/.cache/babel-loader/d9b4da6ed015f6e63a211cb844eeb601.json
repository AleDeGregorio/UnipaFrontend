{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\Frontend\\\\src\\\\Autenticazione\\\\secondaAutenticazioneRegistratiCliente.js\";\nimport React from 'react';\nimport { Form, Col, Button } from 'react-bootstrap'; //import { Row } from 'react-bootstrap'\n\nimport { Link } from 'react-router-dom';\nimport './secondaAutenticazione.css';\nimport { Redirect } from 'react-router-dom';\n\nclass SecondaAutenticazioneRegistratiCliente extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmitInsert = e => {\n      e.preventDefault();\n      const data = {\n        email: this.state.email,\n        password: this.state.password,\n        nome: this.state.nome,\n        cognome: this.state.cognome,\n        nascita: this.state.nascita,\n        telefono: this.state.telefono\n      };\n      fetch('http://localhost:9000/insertCliente/new', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.text()).then(result => {\n        this.setState({\n          apiResponse: JSON.parse(result)\n        });\n\n        if (this.state.apiResponse.status === 'error') {\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.apiResponse.message\n          });\n        } else {\n          this.setState({\n            success: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      nome: '',\n      cognome: '',\n      nascita: '',\n      telefono: '',\n      apiResponse: [],\n      error: false,\n      errorMessage: '',\n      success: false\n    };\n  }\n\n  render() {\n    if (this.state.success) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Errore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, \"Registrazione avvenuta con successo!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"Effettua pure il login, e comincia a navigare dove preferisci\"));\n    } else if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: this.state.errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Form, {\n        className: \"contenitoreAutenticazione\",\n        onSubmit: this.onSubmitInsert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contentNewCheckAutenticazione\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, \"Iscriviti\"), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      }, \"Nome\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"name\",\n        placeholder: \"Nome\",\n        id: \"nome\",\n        name: \"nome\",\n        onChange: this.onChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridSurname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, \"Cognome\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"surname\",\n        placeholder: \"Cognome\",\n        id: \"cognome\",\n        name: \"cognome\",\n        onChange: this.onChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, \"E-mail\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"E-mail\",\n        id: \"email\",\n        name: \"email\",\n        onChange: this.onChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        title: \"Almeno 8 caratteri, una lettera maiuscola e un numero\",\n        pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$\",\n        placeholder: \"Password\",\n        id: \"password\",\n        name: \"password\",\n        onChange: this.onChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridIndirizzo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, \"Telefono\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"tel\",\n        placeholder: \"Telefono\",\n        id: \"telefono\",\n        name: \"telefono\",\n        onChange: this.onChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridCap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, \"Data di nascita\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"date\",\n        required: true,\n        className: \"inputSignUp\",\n        id: \"nascita\",\n        name: \"nascita\",\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Link, {\n        to: \"/secondaAutenticazioneRegistrati\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, \"Torna indietro\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"pulsante\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, \"Registrati\"));\n    }\n  }\n\n}\n\nexport default SecondaAutenticazioneRegistratiCliente;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/Frontend/src/Autenticazione/secondaAutenticazioneRegistratiCliente.js"],"names":["React","Form","Col","Button","Link","Redirect","SecondaAutenticazioneRegistratiCliente","Component","constructor","props","onChange","e","setState","target","name","value","onSubmitInsert","preventDefault","data","email","state","password","nome","cognome","nascita","telefono","fetch","method","headers","body","JSON","stringify","then","result","text","apiResponse","parse","status","error","errorMessage","message","success","render","pathname"],"mappings":"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","sourcesContent":["import React from 'react';    \r\nimport {Form, Col, Button} from 'react-bootstrap'\r\n//import { Row } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport './secondaAutenticazione.css'\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SecondaAutenticazioneRegistratiCliente extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            nome: '',\r\n            cognome: '',\r\n            nascita: '',\r\n            telefono: '',\r\n            apiResponse: [],\r\n            error:false,\r\n            errorMessage:'',\r\n            success: false\r\n        };\r\n    }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n    onSubmitInsert = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            nome: this.state.nome,\r\n            cognome: this.state.cognome,\r\n            nascita: this.state.nascita,\r\n            telefono: this.state.telefono\r\n        }\r\n\r\n        fetch('http://localhost:9000/insertCliente/new', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result)=>{\r\n            this.setState({ apiResponse:JSON.parse(result) });\r\n\r\n            if(this.state.apiResponse.status === 'error') {\r\n                this.setState({ error: true });\r\n                this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n            else {\r\n                this.setState({ success: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.success) {\r\n            return (\r\n                <div className = 'Errore'>\r\n                    <h1>Registrazione avvenuta con successo!</h1>\r\n                    <p>Effettua pure il login, e comincia a navigare dove preferisci</p>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.state.error) {\r\n            return <Redirect \r\n            to = {{\r\n              pathname: \"/ErrorPage\",\r\n              state: {\r\n                error: true,\r\n                errorMessage: this.state.errorMessage\r\n              }\r\n            }}\r\n          />\r\n        }\r\n        else {\r\n            return(\r\n                <Form className=\"contenitoreAutenticazione\" onSubmit={this.onSubmitInsert}>\r\n                    <div className=\"contentNewCheckAutenticazione\">\r\n                        <h2>Iscriviti</h2>\r\n                <Form.Group as={Col} controlId=\"formGridName\">\r\n                            <Form.Label>Nome</Form.Label>\r\n                            <Form.Control type=\"name\" placeholder=\"Nome\" id = 'nome' name = 'nome' onChange={this.onChange} required />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group as={Col} controlId=\"formGridSurname\">\r\n                        <Form.Label>Cognome</Form.Label>\r\n                            <Form.Control type=\"surname\" placeholder=\"Cognome\" id = 'cognome' name = 'cognome' onChange={this.onChange} required/>\r\n                        </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>E-mail</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"E-mail\" id = 'email' name = 'email' onChange={this.onChange} required />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                                type=\"password\" \r\n                                title=\"Almeno 8 caratteri, una lettera maiuscola e un numero\" \r\n                                pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$\"\r\n                                placeholder=\"Password\" \r\n                                id = 'password'\r\n                                name = 'password'\r\n                                onChange={this.onChange} \r\n                                required/>\r\n                        </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridIndirizzo\">\r\n                    <Form.Label>Telefono</Form.Label>\r\n                    <Form.Control \r\n                        type=\"tel\" \r\n                        placeholder=\"Telefono\" \r\n                        id = 'telefono'\r\n                        name = 'telefono'\r\n                        onChange={this.onChange} \r\n                        required/>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridCap\">\r\n                    <Form.Label>Data di nascita</Form.Label>\r\n                    <Form.Control type=\"date\" required className=\"inputSignUp\" id = 'nascita' name = 'nascita' onChange={this.onChange} />\r\n                    </Form.Group>\r\n                    <Link to=\"/secondaAutenticazioneRegistrati\">Torna indietro</Link>\r\n                </div>\r\n                \r\n                <Button variant=\"primary\" type=\"submit\" className=\"pulsante\">\r\n                        Registrati\r\n                    </Button>\r\n                </Form>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default SecondaAutenticazioneRegistratiCliente"]},"metadata":{},"sourceType":"module"}