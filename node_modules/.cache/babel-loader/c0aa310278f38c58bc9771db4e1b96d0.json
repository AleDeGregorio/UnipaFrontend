{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\Frontend\\\\src\\\\GestioneUtente\\\\GestionePrenotazione.js\";\nimport React from 'react';\nimport './GestionePrenotazione.css';\nimport { Card, Accordion, Button, Form, Col, Alert } from 'react-bootstrap'; //import { CardColumn, ListGroup, ListGroupItem } from 'react-bootstrap'\n\nimport moment from \"moment\";\nimport { SingleDatePicker } from \"react-dates\";\nimport { Redirect } from 'react-router-dom';\n\nclass GestionePrenotazione extends React.Component {\n  constructor(props) {\n    //props : stati delle componenti parent\n    super(props);\n\n    this.setShow = e => {\n      this.setState({\n        success: e\n      });\n    };\n\n    this.setShowEmail = e => {\n      if (e === true) {\n        window.scrollTo(0, 0);\n      }\n\n      this.setState({\n        emailInviata: e\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.set_id = e => {\n      this.setState({\n        id_prenotazione: e\n      });\n    };\n\n    this.set_emailProprietario = e => {\n      this.setState({\n        ref_proprietario: e\n      });\n    };\n\n    this.set_focused_checkIn = (e1, e2) => {\n      const list = this.state.checkInFocus.map((item, j) => {\n        if (j === e2) {\n          return e1;\n        } else {\n          return !e1;\n        }\n      });\n      this.setState({\n        checkInFocus: list\n      });\n    };\n\n    this.set_focused_checkOut = (e1, e2) => {\n      const list = this.state.checkOutFocus.map((item, j) => {\n        if (j === e2) {\n          return e1;\n        } else {\n          return !e1;\n        }\n      });\n      this.setState({\n        checkOutFocus: list\n      });\n    };\n\n    this.setStartDate = e => {\n      this.setState({\n        startDate: e\n      });\n    };\n\n    this.setEndDate = e => {\n      this.setState({\n        endDate: e\n      });\n    };\n\n    this.onSubmitModifica = e => {\n      e.preventDefault();\n      var inizio = new Date(this.state.startDate.format()).toLocaleDateString();\n      var fine = this.state.endDate ? new Date(this.state.endDate.format()).toLocaleDateString() : new Date(moment(this.state.startDate).add(1, 'days').format()).toLocaleDateString();\n      this.setState({\n        data_partenza: inizio,\n        data_ritorno: fine\n      }, () => {\n        const data = {\n          id_prenotazione: this.state.id_prenotazione,\n          data_partenza: this.state.data_partenza,\n          data_ritorno: this.state.data_ritorno\n        };\n        fetch('http://localhost:9000/updateDatePrenotazione/newDate', {\n          method: \"POST\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(result => result.text()).then(result => {\n          this.setState({\n            apiResponse: JSON.parse(result)\n          });\n          var res = JSON.parse(result);\n\n          if (res.length < 1 || res.code && res.code === 404) {\n            this.setState({\n              empty: true,\n              errorMessage: res.message\n            });\n          } else if (this.state.apiResponse.status === 'error') {\n            this.setState({\n              error: true\n            });\n            this.setState({\n              errorMessage: this.state.apiResponse.message\n            });\n          } else {\n            window.scrollTo(0, 0);\n            this.setState({\n              success: true,\n              error: false\n            }, () => {\n              window.setTimeout(() => {\n                this.setState({\n                  success: false\n                });\n              }, 3000);\n            });\n          }\n        });\n      });\n    };\n\n    this.onSubmitElimina = e => {\n      e.preventDefault();\n      const data = {\n        id_prenotazione: this.state.id_prenotazione\n      };\n      fetch('http://localhost:9000/deletePrenotazione/delete', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.text()).then(result => {\n        this.setState({\n          responseElimina: JSON.parse(result)\n        });\n        var res = JSON.parse(result);\n\n        if (res.length < 1 || res.code && res.code === 404) {\n          this.setState({\n            empty: true,\n            errorMessage: res.message\n          });\n        } else if (this.state.responseElimina.status === 'error') {\n          window.scrollTo(0, 0);\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.responseElimina.message\n          });\n        } else {\n          window.scrollTo(0, 0);\n          this.setState({\n            success: true,\n            error: false\n          }, () => {\n            window.setTimeout(() => {\n              this.setState({\n                success: false\n              });\n            }, 3000);\n          });\n          window.location.reload();\n        }\n      });\n    };\n\n    this.onClick = e => {};\n\n    this.caricaDate = (tipo_proprieta, ref_proprieta, id_stanza) => {\n      if (tipo_proprieta === 'cv') {\n        const data = {\n          ref_proprieta: ref_proprieta\n        };\n        fetch('http://localhost:9000/getDateCasa/dateCasa', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(result => result.text()).then(result => {\n          var res = JSON.parse(result);\n\n          if (res.length < 1 || res.code && res.code === 404) {\n            this.setState({\n              empty: true,\n              errorMessage: res.message\n            });\n          } else if (res.status === 'error') {\n            this.setState({\n              error: true\n            });\n            this.setState({\n              errorMessage: res.message\n            });\n          } else {\n            this.setState(prevState => {\n              let dateNonDisponibili = { ...prevState.dateNonDisponibili\n              };\n              dateNonDisponibili.inizio = moment(new Date(res[0].non_disponibile_inizio_cv).toLocaleDateString(), 'DD-MM-YYYY');\n              dateNonDisponibili.fine = moment(new Date(res[0].non_disponibile_fine_cv).toLocaleDateString(), 'DD-MM-YYYY');\n              return {\n                dateNonDisponibili\n              };\n            });\n          }\n        });\n      } else {\n        const data = {\n          id_stanza: id_stanza\n        };\n        fetch('http://localhost:9000/getDateStanza/dateStanza', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(result => result.text()).then(result => {\n          var res = JSON.parse(result);\n\n          if (res.length < 1 || res.code && res.code === 404) {\n            this.setState({\n              empty: true,\n              errorMessage: res.message\n            });\n          } else if (res.status === 'error') {\n            this.setState({\n              error: true\n            });\n            this.setState({\n              errorMessage: res.message\n            });\n          } else {\n            this.setState(prevState => {\n              let dateNonDisponibili = { ...prevState.dateNonDisponibili\n              };\n              dateNonDisponibili.inizio = moment(new Date(res[0].non_disponibile_inizio_st).toLocaleDateString(), 'DD-MM-YYYY');\n              dateNonDisponibili.fine = moment(new Date(res[0].non_disponibile_fine_st).toLocaleDateString(), 'DD-MM-YYYY');\n              return {\n                dateNonDisponibili\n              };\n            });\n          }\n        });\n      }\n    };\n\n    this.isDayBlocked = day => {\n      if (day.isBefore(this.state.dateNonDisponibili.inizio) || day.isAfter(this.state.dateNonDisponibili.fine)) {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      id_prenotazione: '',\n      data_partenza: '',\n      data_ritorno: '',\n      ref_proprietario: '',\n      email: localStorage.getItem('email'),\n      //variabili di cui abbiamo bisogno\n      apiResponse: [],\n      responseElimina: [],\n      error: false,\n      errorMessage: '',\n      empty: false,\n      success: false,\n      emailInviata: false,\n      checkInFocus: [],\n      checkOutFocus: [],\n      startDate: moment(),\n      endDate: null,\n      dateNonDisponibili: {\n        inizio: moment(),\n        fine: moment()\n      }\n    };\n  }\n\n  componentDidMount() {\n    const data = {\n      ref_cliente: this.state.email\n    };\n    fetch('http://localhost:9000/searchPrenotazioneCliente/prenotazioneCliente', {\n      //metodo http in fetch\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => result.text()).then(result => {\n      this.setState({\n        apiResponse: JSON.parse(result)\n      }); //rende array il risultato\n\n      var res = JSON.parse(result);\n\n      if (res.length < 1 || res.code && res.code === 404) {\n        this.setState({\n          empty: true,\n          errorMessage: res.message\n        });\n      } else if (this.state.apiResponse.status === 'error') {\n        this.setState({\n          error: true\n        });\n        this.setState({\n          errorMessage: this.state.apiResponse.message\n        });\n      } else {\n        for (var i = 0; i < res.length; i++) {\n          this.setState({\n            checkInFocus: this.state.checkInFocus.concat(null),\n            checkOutFocus: this.state.checkOutFocus.concat(null)\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    if (!localStorage.getItem('logged') || !localStorage.getItem('cliente')) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: \"Utente non autorizzato\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 20\n        }\n      });\n    } else if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: this.state.errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 20\n        }\n      });\n    } else if (this.state.empty) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }\n      }, \"Gestisci le tue prenotazioni\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }\n      }, \"Si \\xE8 verificato un errore: \", this.state.errorMessage)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerGrande\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n        show: this.state.success,\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Alert.Heading, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }\n      }, \"Modifiche avvenute con successo!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }\n      }, \"Le modifiche applicate sono state correttamente caricate e memorizzate all'interno del sistema.\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setShow(false),\n        variant: \"outline-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 29\n        }\n      }, \"Ok\"))))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n        show: this.state.emailInviata,\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Alert.Heading, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }\n      }, \"Comunicazione inviata con successo!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }\n      }, \"Il tuo messaggio \\xE8 stato preso in carico dal sistema e verr\\xE0 presto consegnato al gestore della struttura selezionata.\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.setShowEmail(false),\n        variant: \"outline-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 29\n        }\n      }, \"Ok\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }\n      }, \"Gestisci le tue prenotazioni\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 25\n        }\n      }, \"Le tue prenotazioni: \"), this.state.apiResponse.map((res, index) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containeracc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        border: \"light\",\n        id: \"cardGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headcac\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 53\n        }\n      }, \"ID: \", res.id_prenotazione), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 53\n        }\n      }, \"Partenza: \", new Date(res.data_partenza).toLocaleDateString()), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 53\n        }\n      }, \"Ritorno: \", new Date(res.data_ritorno).toLocaleDateString()), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 53\n        }\n      }, \"Stato: \", res.accettata === null ? 'In attesa di accettazione' : res.accettata === 1 ? 'Accettata' : 'Rifiutata'), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"0\",\n        id: \"accbutt1\",\n        onClick: () => this.set_id(res.id_prenotazione),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 53\n        }\n      }, \"Dettagli\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"acc3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"just-cont\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        id: \"accbutton\",\n        variant: \"link\",\n        eventKey: \"1\",\n        onClick: () => this.caricaDate(res.tipo_proprieta, res.ref_proprieta, res.id_stanza),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 61\n        }\n      }, \"Modifica data\"), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"2\",\n        id: \"accbutton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 61\n        }\n      }, \"Elimina prenotazione\"), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"3\",\n        id: \"accbutton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 61\n        }\n      }, \"Contatta il gestore\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"changeData\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridDate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        class: \"search-label\",\n        htmlFor: \"start_date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 77\n        }\n      }, \"Check-in\"), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => this.set_focused_checkIn(!this.state.checkInFocus[index], index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(SingleDatePicker, {\n        class: \"search-element\",\n        date: this.state.startDate,\n        onDateChange: date => this.setStartDate(date),\n        focused: this.state.checkInFocus[index],\n        onFocusChange: focused => this.onClick(focused),\n        id: \"start_date\",\n        numberOfMonths: 1,\n        placeholder: \"gg/mm/aaaa\",\n        daySize: 32,\n        hideKeyboardShortcutsPanel: true,\n        displayFormat: \"DD/MM/YYYY\",\n        block: true,\n        verticalSpacing: 8,\n        showClearDate: this.state.checkInFocus[index],\n        reopenPickerOnClearDate: true,\n        noBorder: true,\n        isDayBlocked: day => this.isDayBlocked(day),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 85\n        }\n      })))), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridDate1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        class: \"search-label\",\n        htmlFor: \"start_date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 77\n        }\n      }, \"Check-out\"), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => this.set_focused_checkOut(!this.state.checkOutFocus[index], index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(SingleDatePicker, {\n        class: \"search-element\",\n        date: this.state.endDate,\n        onDateChange: date => this.setEndDate(date),\n        focused: this.state.checkOutFocus[index],\n        onFocusChange: focused => this.onClick(focused),\n        id: \"start_date\",\n        numberOfMonths: 1,\n        placeholder: \"gg/mm/aaaa\",\n        daySize: 32,\n        hideKeyboardShortcutsPanel: true,\n        displayFormat: \"DD/MM/YYYY\",\n        block: true,\n        verticalSpacing: 8,\n        showClearDate: this.state.checkOutFocus[index],\n        reopenPickerOnClearDate: true,\n        noBorder: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 85\n        }\n      })))))), /*#__PURE__*/React.createElement(Button, {\n        id: \"cambiadata\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 65\n        }\n      }, \"Modifica data\"))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 69\n        }\n      }, \"Sei sicuro di voler eliminare la tua prenotazione? Non riavrai indietro la caparra.\"), /*#__PURE__*/React.createElement(Button, {\n        id: \"annulla1\",\n        onClick: this.onSubmitElimina,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 69\n        }\n      }, \"Conferma\"))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"3\",\n        onClick: () => this.set_emailProprietario(res.ref_proprietario),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        className: \"formCG\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formGridContact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 77\n        }\n      }, \"La tua email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        value: this.state.email,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 77\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 77\n        }\n      }, \"Inserisci messaggio da inviare al gestore\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        placeholder: \"Inserisci testo\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 77\n        }\n      }))), /*#__PURE__*/React.createElement(Button, {\n        id: \"formCG1\",\n        onClick: () => this.setShowEmail(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 69\n        }\n      }, \"Invia comunicazione\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"infopren\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 53\n        }\n      }, \"Dettagli struttura \"), /*#__PURE__*/React.createElement(Card, {\n        className: \"propcard\",\n        id: \"cardGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 65\n        }\n      }, res.nome_proprieta)), /*#__PURE__*/React.createElement(Card.Img, {\n        src: res.img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 53\n        }\n      }, \"Codice struttura: \", res.ref_proprieta, \", Tipo struttura: \", res.tipo_proprieta === 'bb' ? 'B&B' : 'Casa vacanza'), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        style: {\n          display: res.tipo_proprieta === 'bb' ? 'inline' : 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 53\n        }\n      }, \"Codice stanza: \", res.id_stanza), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 53\n        }\n      }, \"Localit\\xE0: \", res.localita, \" (\", res.provincia, \"),Indirizzo: \", res.indirizzo), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 53\n        }\n      }, \"Costo: \", res.costo, \" euro\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 53\n        }\n      }, \"Soggiornante: \", res.nome_sogg, \" \", res.cognome_sogg))))))))))))));\n    }\n  }\n\n}\n\nexport default GestionePrenotazione;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/Frontend/src/GestioneUtente/GestionePrenotazione.js"],"names":["React","Card","Accordion","Button","Form","Col","Alert","moment","SingleDatePicker","Redirect","GestionePrenotazione","Component","constructor","props","setShow","e","setState","success","setShowEmail","window","scrollTo","emailInviata","onChange","target","name","value","set_id","id_prenotazione","set_emailProprietario","ref_proprietario","set_focused_checkIn","e1","e2","list","state","checkInFocus","map","item","j","set_focused_checkOut","checkOutFocus","setStartDate","startDate","setEndDate","endDate","onSubmitModifica","preventDefault","inizio","Date","format","toLocaleDateString","fine","add","data_partenza","data_ritorno","data","fetch","method","headers","body","JSON","stringify","then","result","text","apiResponse","parse","res","length","code","empty","errorMessage","message","status","error","setTimeout","onSubmitElimina","responseElimina","location","reload","onClick","caricaDate","tipo_proprieta","ref_proprieta","id_stanza","prevState","dateNonDisponibili","non_disponibile_inizio_cv","non_disponibile_fine_cv","non_disponibile_inizio_st","non_disponibile_fine_st","isDayBlocked","day","isBefore","isAfter","email","localStorage","getItem","componentDidMount","ref_cliente","i","concat","render","pathname","fontWeight","index","accettata","date","focused","nome_proprieta","img","display","localita","provincia","indirizzo","costo","nome_sogg","cognome_sogg"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './GestionePrenotazione.css'\r\nimport {Card, Accordion, Button, Form, Col, Alert} from 'react-bootstrap'\r\n//import { CardColumn, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport moment from \"moment\";\r\nimport { SingleDatePicker } from \"react-dates\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass GestionePrenotazione extends React.Component {\r\n\r\n    constructor(props) {     //props : stati delle componenti parent\r\n        super(props);\r\n        this.state = {\r\n            id_prenotazione: '',\r\n            data_partenza: '',\r\n            data_ritorno: '',\r\n            ref_proprietario: '',\r\n            email: localStorage.getItem('email'),  //variabili di cui abbiamo bisogno\r\n            apiResponse: [],\r\n            responseElimina: [],\r\n            error: false,\r\n            errorMessage: '',\r\n            empty: false,\r\n            success: false,\r\n            emailInviata: false,\r\n            checkInFocus: [],\r\n            checkOutFocus: [],\r\n            startDate: moment(),\r\n            endDate: null,\r\n            dateNonDisponibili: {\r\n                inizio: moment(),\r\n                fine: moment()\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    \r\n        const data = {\r\n            ref_cliente: this.state.email\r\n        }; \r\n\r\n        fetch('http://localhost:9000/searchPrenotazioneCliente/prenotazioneCliente', { //metodo http in fetch\r\n            method:'POST',\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result)=> result.text())                  \r\n        .then((result)=> {\r\n            this.setState({ apiResponse:JSON.parse(result) }); //rende array il risultato\r\n            var res = JSON.parse(result);\r\n\r\n            if(res.length < 1 || (res.code && res.code === 404)) {\r\n              this.setState({ empty: true, errorMessage: res.message });\r\n            }\r\n      \r\n            else if(this.state.apiResponse.status === 'error') {\r\n              this.setState({ error: true });\r\n              this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n\r\n            else {\r\n                for(var i = 0; i < res.length; i++) {\r\n                    this.setState({\r\n                        checkInFocus: this.state.checkInFocus.concat(null),\r\n                        checkOutFocus: this.state.checkOutFocus.concat(null)\r\n                    })\r\n                }\r\n            }\r\n        })\r\n   }\r\n\r\n   setShow = (e) => {\r\n    this.setState({ success: e })\r\n    }\r\n\r\n    setShowEmail = (e) => {\r\n        if(e === true) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n\r\n        this.setState({ emailInviata: e })\r\n    }\r\n\r\n   onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    set_id = (e) => {\r\n        this.setState({ id_prenotazione: e })\r\n    }\r\n\r\n    set_emailProprietario = (e) => {\r\n        this.setState({ ref_proprietario: e })\r\n    }\r\n\r\n    set_focused_checkIn = (e1, e2) => {\r\n\r\n        const list = this.state.checkInFocus.map((item, j) => {\r\n            if (j === e2) {\r\n            return e1;\r\n            } else {\r\n            return !e1;\r\n            }\r\n        });\r\n\r\n        this.setState({ checkInFocus: list })\r\n    }\r\n\r\n    set_focused_checkOut = (e1, e2) => {\r\n\r\n        const list = this.state.checkOutFocus.map((item, j) => {\r\n            if (j === e2) {\r\n            return e1;\r\n            } else {\r\n            return !e1;\r\n            }\r\n        });\r\n\r\n        this.setState({ checkOutFocus: list })\r\n    }\r\n\r\n    setStartDate = (e) => {\r\n        this.setState({ startDate: e });\r\n    }\r\n\r\n    setEndDate = (e) => {\r\n        this.setState({ endDate: e });\r\n    }\r\n\r\n    onSubmitModifica = (e) => {\r\n        e.preventDefault();\r\n\r\n        var inizio = new Date(this.state.startDate.format()).toLocaleDateString();\r\n        var fine = this.state.endDate ? new Date(this.state.endDate.format()).toLocaleDateString() : new Date(moment(this.state.startDate).add(1, 'days').format()).toLocaleDateString();\r\n        \r\n        this.setState({\r\n            data_partenza: inizio,\r\n            data_ritorno: fine\r\n        }, () => { \r\n            const data = {\r\n                id_prenotazione: this.state.id_prenotazione,\r\n                data_partenza: this.state.data_partenza,\r\n                data_ritorno: this.state.data_ritorno\r\n            }\r\n\r\n            fetch('http://localhost:9000/updateDatePrenotazione/newDate', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-type' : 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then((result) => result.text())\r\n            .then((result)=>{\r\n                this.setState({ apiResponse:JSON.parse(result) });\r\n                var res = JSON.parse(result);\r\n\r\n                if(res.length < 1 || (res.code && res.code === 404)) {\r\n                    this.setState({ empty: true, errorMessage: res.message });\r\n                }\r\n            \r\n                else if(this.state.apiResponse.status === 'error') {\r\n                    this.setState({ error: true });\r\n                    this.setState({ errorMessage: this.state.apiResponse.message });\r\n                }\r\n                else {\r\n                    window.scrollTo(0, 0);\r\n                    this.setState({ success: true, error: false },()=>{\r\n                        window.setTimeout(()=>{\r\n                            this.setState({success:false})\r\n                        }, 3000)\r\n                        })\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmitElimina = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            id_prenotazione: this.state.id_prenotazione,\r\n        }\r\n\r\n        fetch('http://localhost:9000/deletePrenotazione/delete', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result)=>{\r\n            this.setState({ responseElimina:JSON.parse(result) });\r\n            var res = JSON.parse(result);\r\n\r\n            if(res.length < 1 || (res.code && res.code === 404)) {\r\n              this.setState({ empty: true, errorMessage: res.message });\r\n            }\r\n      \r\n            else if(this.state.responseElimina.status === 'error') {\r\n                window.scrollTo(0, 0);\r\n                this.setState({ error: true });\r\n                this.setState({ errorMessage: this.state.responseElimina.message });\r\n            }\r\n            else {\r\n                window.scrollTo(0, 0);\r\n                this.setState({ success: true, error: false },()=>{\r\n                    window.setTimeout(()=>{\r\n                        this.setState({success:false})\r\n                    }, 3000)\r\n                })\r\n                window.location.reload()\r\n            }\r\n        });\r\n    }\r\n\r\n    onClick = (e) => {\r\n        \r\n    }\r\n\r\n    caricaDate = (tipo_proprieta, ref_proprieta, id_stanza) => {\r\n        if(tipo_proprieta === 'cv') {\r\n            const data = {\r\n                ref_proprieta: ref_proprieta\r\n            }; \r\n\r\n            fetch('http://localhost:9000/getDateCasa/dateCasa', { \r\n                method:'POST',\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then((result)=> result.text())                  \r\n            .then((result)=> {\r\n                var res = JSON.parse(result);\r\n\r\n                if(res.length < 1 || (res.code && res.code === 404)) {\r\n                this.setState({ empty: true, errorMessage: res.message });\r\n                }\r\n        \r\n                else if(res.status === 'error') {\r\n                this.setState({ error: true });\r\n                this.setState({ errorMessage: res.message });\r\n                }\r\n\r\n                else {\r\n                    this.setState(prevState => {\r\n                        let dateNonDisponibili = { ...prevState.dateNonDisponibili };\r\n                        dateNonDisponibili.inizio = moment(new Date(res[0].non_disponibile_inizio_cv).toLocaleDateString(), 'DD-MM-YYYY');   \r\n                        dateNonDisponibili.fine =  moment(new Date(res[0].non_disponibile_fine_cv).toLocaleDateString(), 'DD-MM-YYYY');\r\n                        return { dateNonDisponibili };\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            const data = {\r\n                id_stanza: id_stanza\r\n            }; \r\n\r\n            fetch('http://localhost:9000/getDateStanza/dateStanza', { \r\n                method:'POST',\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then((result)=> result.text())                  \r\n            .then((result)=> {\r\n                var res = JSON.parse(result);\r\n\r\n                if(res.length < 1 || (res.code && res.code === 404)) {\r\n                this.setState({ empty: true, errorMessage: res.message });\r\n                }\r\n        \r\n                else if(res.status === 'error') {\r\n                this.setState({ error: true });\r\n                this.setState({ errorMessage: res.message });\r\n                }\r\n\r\n                else {\r\n                    this.setState(prevState => {\r\n                        let dateNonDisponibili = { ...prevState.dateNonDisponibili };\r\n                        dateNonDisponibili.inizio = moment(new Date(res[0].non_disponibile_inizio_st).toLocaleDateString(), 'DD-MM-YYYY');   \r\n                        dateNonDisponibili.fine =  moment(new Date(res[0].non_disponibile_fine_st).toLocaleDateString(), 'DD-MM-YYYY');\r\n                        return { dateNonDisponibili };\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    isDayBlocked = (day) => {\r\n        if(day.isBefore(this.state.dateNonDisponibili.inizio) || day.isAfter(this.state.dateNonDisponibili.fine)) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        if(!localStorage.getItem('logged') || !localStorage.getItem('cliente')) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/ErrorPage\",\r\n                    state: { \r\n                        error: true,\r\n                        errorMessage: \"Utente non autorizzato\" \r\n                    }\r\n                }}\r\n            />\r\n        }\r\n        else if(this.state.error) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/ErrorPage\",\r\n                    state: { \r\n                        error: true,\r\n                        errorMessage: this.state.errorMessage \r\n                    }\r\n                }}\r\n            />\r\n        }\r\n        else if(this.state.empty) {\r\n            return (\r\n                <div className=\"containerGP\">\r\n                    <div>\r\n                        <h1>Gestisci le tue prenotazioni</h1>\r\n                        <p>Si è verificato un errore: {this.state.errorMessage}</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } \r\n        \r\n        else {\r\n            return (\r\n                <div className=\"containerGrande\">\r\n                    <>\r\n                        <Alert show={this.state.success} variant=\"success\">\r\n                        <Alert.Heading style = {{fontWeight: 'bold'}}>Modifiche avvenute con successo!</Alert.Heading>\r\n                        <p>\r\n                            Le modifiche applicate sono state correttamente caricate e memorizzate all'interno del sistema.\r\n                        </p>\r\n                        <hr />\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <Button onClick={() => this.setShow(false)} variant=\"outline-success\">\r\n                            <span style = {{fontWeight: 'bold'}}>Ok</span>\r\n                            </Button>\r\n                        </div>\r\n                        </Alert>\r\n                    </>\r\n                    <>\r\n                        <Alert show={this.state.emailInviata} variant=\"success\">\r\n                        <Alert.Heading style = {{fontWeight: 'bold'}}>Comunicazione inviata con successo!</Alert.Heading>\r\n                        <p>\r\n                            Il tuo messaggio è stato preso in carico dal sistema e verrà presto consegnato al gestore della struttura selezionata.\r\n                        </p>\r\n                        <hr />\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <Button onClick={() => this.setShowEmail(false)} variant=\"outline-success\">\r\n                            <span style = {{fontWeight: 'bold'}}>Ok</span>\r\n                            </Button>\r\n                        </div>\r\n                        </Alert>\r\n                    </>\r\n                <div className=\"containerGP\">\r\n                    <div>\r\n                        <h1>Gestisci le tue prenotazioni</h1>\r\n                        <h5>Le tue prenotazioni: </h5>\r\n                        {        \r\n                            this.state.apiResponse.map(((res, index)=> \r\n                                <div className=\"containeracc\">\r\n                                    <Accordion>\r\n                                        <Card border=\"light\" id=\"cardGP\">\r\n                                                <div className=\"headcac\">\r\n                                                    <p>ID: {res.id_prenotazione}</p>\r\n                                                    <p>Partenza: {new Date(res.data_partenza).toLocaleDateString()}</p>\r\n                                                    <p>Ritorno: {new Date(res.data_ritorno).toLocaleDateString()}</p>\r\n                                                    <p>Stato: {res.accettata === null ? 'In attesa di accettazione' : (res.accettata === 1 ? 'Accettata' : 'Rifiutata')}</p>\r\n                                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" id=\"accbutt1\" onClick = {() => this.set_id(res.id_prenotazione)}>\r\n                                                        Dettagli\r\n                                                    </Accordion.Toggle>\r\n                                                </div>\r\n                                            <Accordion.Collapse eventKey=\"0\">\r\n                                                <Card.Body>\r\n                                                    <Accordion>\r\n                                                        <div className=\"acc3\">\r\n                                                            <div className=\"just-cont\">\r\n                                                            <Accordion.Toggle as={Button} id=\"accbutton\" variant=\"link\" eventKey=\"1\" onClick = {() => this.caricaDate(res.tipo_proprieta, res.ref_proprieta, res.id_stanza)}>Modifica data</Accordion.Toggle>\r\n                                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" id=\"accbutton\">Elimina prenotazione</Accordion.Toggle>\r\n                                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\" id=\"accbutton\">Contatta il gestore</Accordion.Toggle>\r\n                                                            </div>\r\n                                                            <Accordion.Collapse eventKey=\"1\">\r\n                                                                <div className=\"changeData\">\r\n                                                                <Form>\r\n                                                                    <Form.Row>\r\n                                                                        <Form.Group as={Col} controlId=\"formGridDate\">\r\n                                                                        <div className=\"bianco\">\r\n                                                                            <label class=\"search-label\" htmlFor=\"start_date\">Check-in</label>\r\n                                                                                <div onClick={() => this.set_focused_checkIn(!this.state.checkInFocus[index], index)}>\r\n                                                                                    <SingleDatePicker\r\n                                                                                        class=\"search-element\"\r\n                                                                                        date={this.state.startDate}\r\n                                                                                        onDateChange={date => this.setStartDate(date)}\r\n                                                                                        focused={this.state.checkInFocus[index]}\r\n                                                                                        onFocusChange = {focused => this.onClick(focused)}\r\n                                                                                        id=\"start_date\" \r\n                                                                                        numberOfMonths={1}\r\n                                                                                        placeholder=\"gg/mm/aaaa\"\r\n                                                                                        daySize={32}\r\n                                                                                        hideKeyboardShortcutsPanel={true}\r\n                                                                                        displayFormat=\"DD/MM/YYYY\"\r\n                                                                                        block={true}\r\n                                                                                        verticalSpacing={8}\r\n                                                                                        showClearDate={this.state.checkInFocus[index]}\r\n                                                                                        reopenPickerOnClearDate={true}\r\n                                                                                        noBorder={true}\r\n                                                                                        isDayBlocked={day => this.isDayBlocked(day)}\r\n                                                                                    />\r\n                                                                                </div>\r\n                                                                        </div>\r\n                                                                        </Form.Group>\r\n                                                                        <Form.Group as={Col} controlId=\"formGridDate1\">\r\n                                                                        <div className=\"bianco\">\r\n                                                                            <label class=\"search-label\" htmlFor=\"start_date\">Check-out</label>\r\n                                                                                <div onClick={() => this.set_focused_checkOut(!this.state.checkOutFocus[index], index)}>\r\n                                                                                    <SingleDatePicker\r\n                                                                                        class=\"search-element\"\r\n                                                                                        date={this.state.endDate}\r\n                                                                                        onDateChange={date => this.setEndDate(date)}\r\n                                                                                        focused={this.state.checkOutFocus[index]}\r\n                                                                                        onFocusChange = {focused => this.onClick(focused)}\r\n                                                                                        id=\"start_date\" \r\n                                                                                        numberOfMonths={1}\r\n                                                                                        placeholder=\"gg/mm/aaaa\"\r\n                                                                                        daySize={32}\r\n                                                                                        hideKeyboardShortcutsPanel={true}\r\n                                                                                        displayFormat=\"DD/MM/YYYY\"\r\n                                                                                        block={true}\r\n                                                                                        verticalSpacing={8}\r\n                                                                                        showClearDate={this.state.checkOutFocus[index]}\r\n                                                                                        reopenPickerOnClearDate={true}\r\n                                                                                        noBorder={true}\r\n                                                                                    />\r\n                                                                                </div>\r\n                                                                        </div>\r\n                                                                        </Form.Group>\r\n                                                                    </Form.Row>\r\n                                                                </Form>\r\n                                                                <Button id=\"cambiadata\" type=\"submit\">\r\n                                                                Modifica data\r\n                                                                 </Button>\r\n                                                                 </div>\r\n                                                            </Accordion.Collapse>\r\n\r\n                                                            <Accordion.Collapse eventKey=\"2\">\r\n                                                                <div>\r\n                                                                    <p className=\"bianco\">Sei sicuro di voler eliminare la tua prenotazione? Non riavrai indietro la caparra.</p>\r\n                                                                    <Button id=\"annulla1\" onClick = {this.onSubmitElimina}>Conferma</Button>\r\n                                                                </div>\r\n                                                            </Accordion.Collapse>\r\n\r\n                                                            <Accordion.Collapse eventKey=\"3\" onClick = {() => this.set_emailProprietario(res.ref_proprietario)}>\r\n                                                                <Form className=\"formCG\">\r\n                                                                    <Form.Row>\r\n                                                                        <Form.Group controlId=\"formGridContact\">\r\n                                                                            <Form.Label className=\"bianco\">La tua email</Form.Label>\r\n                                                                            <Form.Control type=\"email\" value={this.state.email} required />\r\n                                                                            <Form.Label className=\"bianco\">Inserisci messaggio da inviare al gestore</Form.Label>\r\n                                                                            <Form.Control as=\"textarea\" placeholder=\"Inserisci testo\" required />\r\n                                                                            \r\n                                                                        </Form.Group>\r\n                                                                        \r\n                                                                    </Form.Row>\r\n                                                                    <Button id=\"formCG1\" onClick={() => this.setShowEmail(true)}>Invia comunicazione</Button>\r\n\r\n                                                                </Form>\r\n                                                            </Accordion.Collapse>\r\n                                                        </div>\r\n                                                    </Accordion>\r\n                                                    <div className=\"infopren\">\r\n                                                    <h4>Dettagli struttura </h4>\r\n                                                    <Card className=\"propcard\" id=\"cardGP\">\r\n                                                    <Card.Body>\r\n                                                    <Card.Title><h5>{res.nome_proprieta}</h5></Card.Title>\r\n                                                    <Card.Img src={res.img}/>\r\n                                                    <Card.Text>\r\n                                                    <p className=\"bianco\">Codice struttura: {res.ref_proprieta}, Tipo struttura: {res.tipo_proprieta === 'bb' ? 'B&B' : 'Casa vacanza'}</p>\r\n                                                    <p className=\"bianco\" style = {{display: res.tipo_proprieta === 'bb' ? 'inline' : 'none'}}>Codice stanza: {res.id_stanza}</p>\r\n                                                    <p className=\"bianco\">Località: {res.localita} ({res.provincia}),Indirizzo: {res.indirizzo}</p>\r\n                                                    <p className=\"bianco\">Costo: {res.costo} euro</p>\r\n                                                    <p className=\"bianco\">Soggiornante: {res.nome_sogg} {res.cognome_sogg}</p>\r\n                                                    </Card.Text>\r\n                                                    </Card.Body>\r\n                                                    </Card>\r\n                                                    </div>\r\n                                                </Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n                                    </Accordion>\r\n                                </div>\r\n                            )) \r\n                        }   \r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default GestionePrenotazione;"]},"metadata":{},"sourceType":"module"}