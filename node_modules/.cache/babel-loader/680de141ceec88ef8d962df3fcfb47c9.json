{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\Frontend\\\\src\\\\GestioneUtente\\\\GestionePrenotazione.js\";\nimport React from 'react';\nimport './GestionePrenotazione.css';\nimport { Card, Accordion, Button, Form, Col } from 'react-bootstrap'; //import { CardColumn, ListGroup, ListGroupItem } from 'react-bootstrap'\n\nimport moment from \"moment\";\nimport { SingleDatePicker } from \"react-dates\";\nimport { Redirect } from 'react-router-dom';\n\nclass GestionePrenotazione extends React.Component {\n  constructor(props) {\n    //props : stati delle componenti parent\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.set_id = e => {\n      this.setState({\n        id_prenotazione: e\n      });\n    };\n\n    this.set_emailProprietario = e => {\n      this.setState({\n        ref_proprietario: e\n      });\n    };\n\n    this.set_focused_checkIn = (e1, e2) => {\n      const list = this.state.checkInFocus.map((item, j) => {\n        if (j === e2) {\n          return e1;\n        } else {\n          return !e1;\n        }\n      });\n      this.setState({\n        checkInFocus: list\n      });\n    };\n\n    this.set_focused_checkOut = (e1, e2) => {\n      const list = this.state.checkOutFocus.map((item, j) => {\n        if (j === e2) {\n          return e1;\n        } else {\n          return !e1;\n        }\n      });\n      this.setState({\n        checkOutFocus: list\n      });\n    };\n\n    this.setStartDate = e => {\n      this.setState({\n        startDate: e\n      });\n    };\n\n    this.setEndDate = e => {\n      this.setState({\n        endDate: e\n      });\n    };\n\n    this.onSubmitModifica = e => {\n      e.preventDefault();\n      const data = {\n        id_prenotazione: this.state.id_prenotazione,\n        data_partenza: this.state.data_partenza,\n        data_ritorno: this.state.data_ritorno\n      };\n      fetch('http://localhost:9000/updateDatePrenotazione/newDate', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.text()).then(result => {\n        this.setState({\n          apiResponse: JSON.parse(result)\n        });\n        var res = JSON.parse(result);\n\n        if (res.length < 1 || res.code && res.code === 404) {\n          this.setState({\n            empty: true,\n            errorMessage: res.message\n          });\n        } else if (this.state.apiResponse.status === 'error') {\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.apiResponse.message\n          });\n        } else {\n          this.setState({\n            success: true\n          });\n        }\n      });\n    };\n\n    this.onSubmitElimina = e => {\n      e.preventDefault();\n      const data = {\n        id_prenotazione: this.state.id_prenotazione\n      };\n      fetch('http://localhost:9000/deletePrenotazione/delete', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.text()).then(result => {\n        this.setState({\n          apiResponse: JSON.parse(result)\n        });\n        var res = JSON.parse(result);\n\n        if (res.length < 1 || res.code && res.code === 404) {\n          this.setState({\n            empty: true,\n            errorMessage: res.message\n          });\n        } else if (this.state.apiResponse.status === 'error') {\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.apiResponse.message\n          });\n        } else {\n          this.setState({\n            success: true\n          });\n        }\n      });\n    };\n\n    this.onClick = e => {};\n\n    this.caricaDate = (tipo_proprieta, ref_proprieta, id_stanza) => {\n      if (tipo_proprieta === 'cv') {\n        const data = {\n          ref_proprieta: ref_proprieta\n        };\n        fetch('http://localhost:9000/getDateCasa/dateCasa', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(result => result.text()).then(result => {\n          var res = JSON.parse(result);\n\n          if (res.length < 1 || res.code && res.code === 404) {\n            this.setState({\n              empty: true,\n              errorMessage: res.message\n            });\n          } else if (res.status === 'error') {\n            this.setState({\n              error: true\n            });\n            this.setState({\n              errorMessage: res.message\n            });\n          } else {\n            this.setState(prevState => {\n              let dateNonDisponibili = { ...prevState.dateNonDisponibili\n              };\n              dateNonDisponibili.inizio = moment(new Date(res[0].non_disponibile_inizio_cv).toLocaleDateString(), 'DD-MM-YYYY');\n              dateNonDisponibili.fine = moment(new Date(res[0].non_disponibile_fine_cv).toLocaleDateString(), 'DD-MM-YYYY');\n              return {\n                dateNonDisponibili\n              };\n            });\n          }\n        });\n      } else {\n        const data = {\n          id_stanza: id_stanza\n        };\n        fetch('http://localhost:9000/getDateStanza/dateStanza', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(result => result.text()).then(result => {\n          var res = JSON.parse(result);\n\n          if (res.length < 1 || res.code && res.code === 404) {\n            this.setState({\n              empty: true,\n              errorMessage: res.message\n            });\n          } else if (res.status === 'error') {\n            this.setState({\n              error: true\n            });\n            this.setState({\n              errorMessage: res.message\n            });\n          } else {\n            this.setState(prevState => {\n              let dateNonDisponibili = { ...prevState.dateNonDisponibili\n              };\n              dateNonDisponibili.inizio = moment(new Date(res[0].non_disponibile_inizio_st).toLocaleDateString(), 'DD-MM-YYYY');\n              dateNonDisponibili.fine = moment(new Date(res[0].non_disponibile_fine_st).toLocaleDateString(), 'DD-MM-YYYY');\n              return {\n                dateNonDisponibili\n              };\n            });\n          }\n        });\n      }\n    };\n\n    this.isDayBlocked = day => {\n      if (day.isBefore(this.state.dateNonDisponibili.inizio) || day.isAfter(this.state.dateNonDisponibili.fine)) {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      id_prenotazione: '',\n      data_partenza: '',\n      data_ritorno: '',\n      ref_proprietario: '',\n      email: localStorage.getItem('email'),\n      //variabili di cui abbiamo bisogno\n      apiResponse: [],\n      error: false,\n      errorMessage: '',\n      empty: false,\n      checkInFocus: [],\n      checkOutFocus: [],\n      startDate: moment(),\n      endDate: null,\n      dateNonDisponibili: {\n        inizio: moment(\"1/2/2021\", \"DD-MM-YYYY\"),\n        fine: moment(\"5/2/2021\", \"DD-MM-YYYY\")\n      }\n    };\n  }\n\n  componentDidMount() {\n    const data = {\n      ref_cliente: this.state.email\n    };\n    fetch('http://localhost:9000/searchPrenotazioneCliente/prenotazioneCliente', {\n      //metodo http in fetch\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => result.text()).then(result => {\n      this.setState({\n        apiResponse: JSON.parse(result)\n      }); //rende array il risultato\n\n      var res = JSON.parse(result);\n\n      if (res.length < 1 || res.code && res.code === 404) {\n        this.setState({\n          empty: true,\n          errorMessage: res.message\n        });\n      } else if (this.state.apiResponse.status === 'error') {\n        this.setState({\n          error: true\n        });\n        this.setState({\n          errorMessage: this.state.apiResponse.message\n        });\n      } else {\n        for (var i = 0; i < res.length; i++) {\n          this.setState({\n            checkInFocus: this.state.checkInFocus.concat(null),\n            checkOutFocus: this.state.checkOutFocus.concat(null)\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    if (!localStorage.getItem('logged') || !localStorage.getItem('cliente')) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: \"Utente non autorizzato\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 20\n        }\n      });\n    } else if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: this.state.errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 20\n        }\n      });\n    } else if (this.state.empty) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }\n      }, \"Gestisci le tue prenotazioni\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }\n      }, \"Si \\xE8 verificato un errore: \", this.state.errorMessage)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerGrande\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }\n      }, \"Gestisci le tue prenotazioni\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }\n      }, \"Le tue prenotazioni: \"), this.state.apiResponse.map((res, index) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containeracc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        border: \"light\",\n        id: \"cardGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headcac\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 53\n        }\n      }, \"ID: \", res.id_prenotazione), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 53\n        }\n      }, \"Partenza: \", new Date(res.data_partenza).toLocaleDateString()), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 53\n        }\n      }, \"Ritorno: \", new Date(res.data_ritorno).toLocaleDateString()), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 53\n        }\n      }, \"Stato: \", res.accettata === null ? 'In attesa di accettazione' : res.accettata === 1 ? 'Accettata' : 'Rifiutata'), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"0\",\n        id: \"accbutt1\",\n        onClick: () => this.set_id(res.id_prenotazione),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 53\n        }\n      }, \"Dettagli\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"acc3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"just-cont\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        id: \"accbutton\",\n        variant: \"link\",\n        eventKey: \"1\",\n        onClick: () => this.caricaDate(res.tipo_proprieta, res.ref_proprieta, res.id_stanza),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 61\n        }\n      }, \"Modifica data\"), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"2\",\n        id: \"accbutton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 61\n        }\n      }, \"Elimina prenotazione\"), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"3\",\n        id: \"accbutton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 61\n        }\n      }, \"Contatta il gestore\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"changeData\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridDate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        class: \"search-label\",\n        htmlFor: \"start_date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 77\n        }\n      }, \"Check-in\"), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => this.set_focused_checkIn(!this.state.checkInFocus[index], index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(SingleDatePicker, {\n        class: \"search-element\",\n        date: this.state.startDate,\n        onDateChange: date => this.setStartDate(date),\n        focused: this.state.checkInFocus[index],\n        onFocusChange: focused => this.onClick(focused),\n        id: \"start_date\",\n        numberOfMonths: 1,\n        placeholder: \"gg/mm/aaaa\",\n        daySize: 32,\n        hideKeyboardShortcutsPanel: true,\n        displayFormat: \"DD/MM/YYYY\",\n        block: true,\n        verticalSpacing: 8,\n        showClearDate: this.state.checkInFocus[index],\n        reopenPickerOnClearDate: true,\n        noBorder: true,\n        isDayBlocked: day => this.isDayBlocked(day),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 85\n        }\n      })))), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridDate1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        class: \"search-label\",\n        htmlFor: \"start_date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 77\n        }\n      }, \"Check-out\"), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => this.set_focused_checkOut(!this.state.checkOutFocus[index], index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(SingleDatePicker, {\n        class: \"search-element\",\n        date: this.state.endDate,\n        onDateChange: date => this.setEndDate(date),\n        focused: this.state.checkOutFocus[index],\n        onFocusChange: focused => this.onClick(focused),\n        id: \"start_date\",\n        numberOfMonths: 1,\n        placeholder: \"gg/mm/aaaa\",\n        daySize: 32,\n        hideKeyboardShortcutsPanel: true,\n        displayFormat: \"DD/MM/YYYY\",\n        block: true,\n        verticalSpacing: 8,\n        showClearDate: this.state.checkOutFocus[index],\n        reopenPickerOnClearDate: true,\n        noBorder: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 85\n        }\n      })))))), /*#__PURE__*/React.createElement(Button, {\n        id: \"cambiadata\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 65\n        }\n      }, \"Modifica data\"))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 69\n        }\n      }, \"Sei sicuro di voler eliminare la tua prenotazione? Non riavrai indietro la caparra.\"), /*#__PURE__*/React.createElement(Button, {\n        id: \"annulla1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 69\n        }\n      }, \"Conferma\"))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"3\",\n        onClick: () => this.set_emailProprietario(res.ref_proprietario),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        className: \"formCG\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formGridContact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 77\n        }\n      }, \"Inserisci email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Inserisci tua email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 77\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 77\n        }\n      }, \"Inserisci messaggio da inviare al gestore\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        placeholder: \"Inserisci testo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 77\n        }\n      }))), /*#__PURE__*/React.createElement(Button, {\n        id: \"formCG1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 69\n        }\n      }, \"Invia comunicazione\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"infopren\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 53\n        }\n      }, \"Dettagli struttura \"), /*#__PURE__*/React.createElement(Card, {\n        className: \"propcard\",\n        id: \"cardGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 65\n        }\n      }, res.nome_proprieta)), /*#__PURE__*/React.createElement(Card.Img, {\n        src: res.img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 53\n        }\n      }, \"Codice struttura: \", res.ref_proprieta, \", Tipo struttura: \", res.tipo_proprieta === 'bb' ? 'B&B' : 'Casa vacanza'), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        style: {\n          display: res.tipo_proprieta === 'bb' ? 'inline' : 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 53\n        }\n      }, \"Codice stanza: \", res.id_stanza), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 53\n        }\n      }, \"Localit\\xE0: \", res.localita, \" (\", res.provincia, \"),Indirizzo: \", res.indirizzo), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 53\n        }\n      }, \"Costo: \", res.costo, \" euro\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 53\n        }\n      }, \"Soggiornante: \", res.nome_sogg, \" \", res.cognome_sogg))))))))))))));\n    }\n  }\n\n}\n\nexport default GestionePrenotazione;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/Frontend/src/GestioneUtente/GestionePrenotazione.js"],"names":["React","Card","Accordion","Button","Form","Col","moment","SingleDatePicker","Redirect","GestionePrenotazione","Component","constructor","props","onChange","e","setState","target","name","value","set_id","id_prenotazione","set_emailProprietario","ref_proprietario","set_focused_checkIn","e1","e2","list","state","checkInFocus","map","item","j","set_focused_checkOut","checkOutFocus","setStartDate","startDate","setEndDate","endDate","onSubmitModifica","preventDefault","data","data_partenza","data_ritorno","fetch","method","headers","body","JSON","stringify","then","result","text","apiResponse","parse","res","length","code","empty","errorMessage","message","status","error","success","onSubmitElimina","onClick","caricaDate","tipo_proprieta","ref_proprieta","id_stanza","prevState","dateNonDisponibili","inizio","Date","non_disponibile_inizio_cv","toLocaleDateString","fine","non_disponibile_fine_cv","non_disponibile_inizio_st","non_disponibile_fine_st","isDayBlocked","day","isBefore","isAfter","email","localStorage","getItem","componentDidMount","ref_cliente","i","concat","render","pathname","index","accettata","date","focused","nome_proprieta","img","display","localita","provincia","indirizzo","costo","nome_sogg","cognome_sogg"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './GestionePrenotazione.css'\r\nimport {Card, Accordion, Button, Form, Col} from 'react-bootstrap'\r\n//import { CardColumn, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport moment from \"moment\";\r\nimport { SingleDatePicker } from \"react-dates\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass GestionePrenotazione extends React.Component {\r\n\r\n    constructor(props) {     //props : stati delle componenti parent\r\n        super(props);\r\n        this.state = {\r\n            id_prenotazione: '',\r\n            data_partenza: '',\r\n            data_ritorno: '',\r\n            ref_proprietario: '',\r\n            email: localStorage.getItem('email'),  //variabili di cui abbiamo bisogno\r\n            apiResponse: [] ,\r\n            error: false,\r\n            errorMessage: '',\r\n            empty: false,\r\n            checkInFocus: [],\r\n            checkOutFocus: [],\r\n            startDate: moment(),\r\n            endDate: null,\r\n            dateNonDisponibili: {\r\n                inizio: moment(\"1/2/2021\", \"DD-MM-YYYY\"),\r\n                fine: moment(\"5/2/2021\", \"DD-MM-YYYY\")\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    \r\n        const data = {\r\n            ref_cliente: this.state.email\r\n        }; \r\n\r\n        fetch('http://localhost:9000/searchPrenotazioneCliente/prenotazioneCliente', { //metodo http in fetch\r\n            method:'POST',\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result)=> result.text())                  \r\n        .then((result)=> {\r\n            this.setState({ apiResponse:JSON.parse(result) }); //rende array il risultato\r\n            var res = JSON.parse(result);\r\n\r\n            if(res.length < 1 || (res.code && res.code === 404)) {\r\n              this.setState({ empty: true, errorMessage: res.message });\r\n            }\r\n      \r\n            else if(this.state.apiResponse.status === 'error') {\r\n              this.setState({ error: true });\r\n              this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n\r\n            else {\r\n                for(var i = 0; i < res.length; i++) {\r\n                    this.setState({\r\n                        checkInFocus: this.state.checkInFocus.concat(null),\r\n                        checkOutFocus: this.state.checkOutFocus.concat(null)\r\n                    })\r\n                }\r\n            }\r\n        })\r\n   }\r\n\r\n   onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    set_id = (e) => {\r\n        this.setState({ id_prenotazione: e })\r\n    }\r\n\r\n    set_emailProprietario = (e) => {\r\n        this.setState({ ref_proprietario: e })\r\n    }\r\n\r\n    set_focused_checkIn = (e1, e2) => {\r\n\r\n        const list = this.state.checkInFocus.map((item, j) => {\r\n            if (j === e2) {\r\n            return e1;\r\n            } else {\r\n            return !e1;\r\n            }\r\n        });\r\n\r\n        this.setState({ checkInFocus: list })\r\n    }\r\n\r\n    set_focused_checkOut = (e1, e2) => {\r\n\r\n        const list = this.state.checkOutFocus.map((item, j) => {\r\n            if (j === e2) {\r\n            return e1;\r\n            } else {\r\n            return !e1;\r\n            }\r\n        });\r\n\r\n        this.setState({ checkOutFocus: list })\r\n    }\r\n\r\n    setStartDate = (e) => {\r\n        this.setState({ startDate: e });\r\n    }\r\n\r\n    setEndDate = (e) => {\r\n        this.setState({ endDate: e });\r\n    }\r\n\r\n    onSubmitModifica = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            id_prenotazione: this.state.id_prenotazione,\r\n            data_partenza: this.state.data_partenza,\r\n            data_ritorno: this.state.data_ritorno\r\n        }\r\n\r\n        fetch('http://localhost:9000/updateDatePrenotazione/newDate', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result)=>{\r\n            this.setState({ apiResponse:JSON.parse(result) });\r\n            var res = JSON.parse(result);\r\n\r\n            if(res.length < 1 || (res.code && res.code === 404)) {\r\n              this.setState({ empty: true, errorMessage: res.message });\r\n            }\r\n      \r\n            else if(this.state.apiResponse.status === 'error') {\r\n              this.setState({ error: true });\r\n              this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n            else {\r\n                this.setState({ success: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmitElimina = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            id_prenotazione: this.state.id_prenotazione,\r\n        }\r\n\r\n        fetch('http://localhost:9000/deletePrenotazione/delete', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result)=>{\r\n            this.setState({ apiResponse:JSON.parse(result) });\r\n            var res = JSON.parse(result);\r\n\r\n            if(res.length < 1 || (res.code && res.code === 404)) {\r\n              this.setState({ empty: true, errorMessage: res.message });\r\n            }\r\n      \r\n            else if(this.state.apiResponse.status === 'error') {\r\n              this.setState({ error: true });\r\n              this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n            else {\r\n                this.setState({ success: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    onClick = (e) => {\r\n        \r\n    }\r\n\r\n    caricaDate = (tipo_proprieta, ref_proprieta, id_stanza) => {\r\n        if(tipo_proprieta === 'cv') {\r\n            const data = {\r\n                ref_proprieta: ref_proprieta\r\n            }; \r\n\r\n            fetch('http://localhost:9000/getDateCasa/dateCasa', { \r\n                method:'POST',\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then((result)=> result.text())                  \r\n            .then((result)=> {\r\n                var res = JSON.parse(result);\r\n\r\n                if(res.length < 1 || (res.code && res.code === 404)) {\r\n                this.setState({ empty: true, errorMessage: res.message });\r\n                }\r\n        \r\n                else if(res.status === 'error') {\r\n                this.setState({ error: true });\r\n                this.setState({ errorMessage: res.message });\r\n                }\r\n\r\n                else {\r\n                    this.setState(prevState => {\r\n                        let dateNonDisponibili = { ...prevState.dateNonDisponibili };\r\n                        dateNonDisponibili.inizio = moment(new Date(res[0].non_disponibile_inizio_cv).toLocaleDateString(), 'DD-MM-YYYY');   \r\n                        dateNonDisponibili.fine =  moment(new Date(res[0].non_disponibile_fine_cv).toLocaleDateString(), 'DD-MM-YYYY');\r\n                        return { dateNonDisponibili };\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            const data = {\r\n                id_stanza: id_stanza\r\n            }; \r\n\r\n            fetch('http://localhost:9000/getDateStanza/dateStanza', { \r\n                method:'POST',\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then((result)=> result.text())                  \r\n            .then((result)=> {\r\n                var res = JSON.parse(result);\r\n\r\n                if(res.length < 1 || (res.code && res.code === 404)) {\r\n                this.setState({ empty: true, errorMessage: res.message });\r\n                }\r\n        \r\n                else if(res.status === 'error') {\r\n                this.setState({ error: true });\r\n                this.setState({ errorMessage: res.message });\r\n                }\r\n\r\n                else {\r\n                    this.setState(prevState => {\r\n                        let dateNonDisponibili = { ...prevState.dateNonDisponibili };\r\n                        dateNonDisponibili.inizio = moment(new Date(res[0].non_disponibile_inizio_st).toLocaleDateString(), 'DD-MM-YYYY');   \r\n                        dateNonDisponibili.fine =  moment(new Date(res[0].non_disponibile_fine_st).toLocaleDateString(), 'DD-MM-YYYY');\r\n                        return { dateNonDisponibili };\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    isDayBlocked = (day) => {\r\n        if(day.isBefore(this.state.dateNonDisponibili.inizio) || day.isAfter(this.state.dateNonDisponibili.fine)) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        if(!localStorage.getItem('logged') || !localStorage.getItem('cliente')) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/ErrorPage\",\r\n                    state: { \r\n                        error: true,\r\n                        errorMessage: \"Utente non autorizzato\" \r\n                    }\r\n                }}\r\n            />\r\n        }\r\n        else if(this.state.error) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/ErrorPage\",\r\n                    state: { \r\n                        error: true,\r\n                        errorMessage: this.state.errorMessage \r\n                    }\r\n                }}\r\n            />\r\n        }\r\n        else if(this.state.empty) {\r\n            return (\r\n                <div className=\"containerGP\">\r\n                    <div>\r\n                        <h1>Gestisci le tue prenotazioni</h1>\r\n                        <p>Si è verificato un errore: {this.state.errorMessage}</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } \r\n        \r\n        else {\r\n            return (\r\n                <div className=\"containerGrande\">\r\n                <div className=\"containerGP\">\r\n                    <div>\r\n                        <h1>Gestisci le tue prenotazioni</h1>\r\n                        <h5>Le tue prenotazioni: </h5>\r\n                        {        \r\n                            this.state.apiResponse.map(((res, index)=> \r\n                                <div className=\"containeracc\">\r\n                                    <Accordion>\r\n                                        <Card border=\"light\" id=\"cardGP\">\r\n                                                <div className=\"headcac\">\r\n                                                    <p>ID: {res.id_prenotazione}</p>\r\n                                                    <p>Partenza: {new Date(res.data_partenza).toLocaleDateString()}</p>\r\n                                                    <p>Ritorno: {new Date(res.data_ritorno).toLocaleDateString()}</p>\r\n                                                    <p>Stato: {res.accettata === null ? 'In attesa di accettazione' : (res.accettata === 1 ? 'Accettata' : 'Rifiutata')}</p>\r\n                                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" id=\"accbutt1\" onClick = {() => this.set_id(res.id_prenotazione)}>\r\n                                                        Dettagli\r\n                                                    </Accordion.Toggle>\r\n                                                </div>\r\n                                            <Accordion.Collapse eventKey=\"0\">\r\n                                                <Card.Body>\r\n                                                    <Accordion>\r\n                                                        <div className=\"acc3\">\r\n                                                            <div className=\"just-cont\">\r\n                                                            <Accordion.Toggle as={Button} id=\"accbutton\" variant=\"link\" eventKey=\"1\" onClick = {() => this.caricaDate(res.tipo_proprieta, res.ref_proprieta, res.id_stanza)}>Modifica data</Accordion.Toggle>\r\n                                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" id=\"accbutton\">Elimina prenotazione</Accordion.Toggle>\r\n                                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\" id=\"accbutton\">Contatta il gestore</Accordion.Toggle>\r\n                                                            </div>\r\n                                                            <Accordion.Collapse eventKey=\"1\">\r\n                                                                <div className=\"changeData\">\r\n                                                                <Form>\r\n                                                                    <Form.Row>\r\n                                                                        <Form.Group as={Col} controlId=\"formGridDate\">\r\n                                                                        <div className=\"bianco\">\r\n                                                                            <label class=\"search-label\" htmlFor=\"start_date\">Check-in</label>\r\n                                                                                <div onClick={() => this.set_focused_checkIn(!this.state.checkInFocus[index], index)}>\r\n                                                                                    <SingleDatePicker\r\n                                                                                        class=\"search-element\"\r\n                                                                                        date={this.state.startDate}\r\n                                                                                        onDateChange={date => this.setStartDate(date)}\r\n                                                                                        focused={this.state.checkInFocus[index]}\r\n                                                                                        onFocusChange = {focused => this.onClick(focused)}\r\n                                                                                        id=\"start_date\" \r\n                                                                                        numberOfMonths={1}\r\n                                                                                        placeholder=\"gg/mm/aaaa\"\r\n                                                                                        daySize={32}\r\n                                                                                        hideKeyboardShortcutsPanel={true}\r\n                                                                                        displayFormat=\"DD/MM/YYYY\"\r\n                                                                                        block={true}\r\n                                                                                        verticalSpacing={8}\r\n                                                                                        showClearDate={this.state.checkInFocus[index]}\r\n                                                                                        reopenPickerOnClearDate={true}\r\n                                                                                        noBorder={true}\r\n                                                                                        isDayBlocked={day => this.isDayBlocked(day)}\r\n                                                                                    />\r\n                                                                                </div>\r\n                                                                        </div>\r\n                                                                        </Form.Group>\r\n                                                                        <Form.Group as={Col} controlId=\"formGridDate1\">\r\n                                                                        <div className=\"bianco\">\r\n                                                                            <label class=\"search-label\" htmlFor=\"start_date\">Check-out</label>\r\n                                                                                <div onClick={() => this.set_focused_checkOut(!this.state.checkOutFocus[index], index)}>\r\n                                                                                    <SingleDatePicker\r\n                                                                                        class=\"search-element\"\r\n                                                                                        date={this.state.endDate}\r\n                                                                                        onDateChange={date => this.setEndDate(date)}\r\n                                                                                        focused={this.state.checkOutFocus[index]}\r\n                                                                                        onFocusChange = {focused => this.onClick(focused)}\r\n                                                                                        id=\"start_date\" \r\n                                                                                        numberOfMonths={1}\r\n                                                                                        placeholder=\"gg/mm/aaaa\"\r\n                                                                                        daySize={32}\r\n                                                                                        hideKeyboardShortcutsPanel={true}\r\n                                                                                        displayFormat=\"DD/MM/YYYY\"\r\n                                                                                        block={true}\r\n                                                                                        verticalSpacing={8}\r\n                                                                                        showClearDate={this.state.checkOutFocus[index]}\r\n                                                                                        reopenPickerOnClearDate={true}\r\n                                                                                        noBorder={true}\r\n                                                                                    />\r\n                                                                                </div>\r\n                                                                        </div>\r\n                                                                        </Form.Group>\r\n                                                                    </Form.Row>\r\n                                                                </Form>\r\n                                                                <Button id=\"cambiadata\" type=\"submit\">\r\n                                                                Modifica data\r\n                                                                 </Button>\r\n                                                                 </div>\r\n                                                            </Accordion.Collapse>\r\n\r\n                                                            <Accordion.Collapse eventKey=\"2\">\r\n                                                                <div>\r\n                                                                    <p className=\"bianco\">Sei sicuro di voler eliminare la tua prenotazione? Non riavrai indietro la caparra.</p>\r\n                                                                    <Button id=\"annulla1\">Conferma</Button>\r\n                                                                </div>\r\n                                                            </Accordion.Collapse>\r\n\r\n                                                            <Accordion.Collapse eventKey=\"3\" onClick = {() => this.set_emailProprietario(res.ref_proprietario)}>\r\n                                                                <Form className=\"formCG\">\r\n                                                                    <Form.Row>\r\n                                                                        <Form.Group controlId=\"formGridContact\">\r\n                                                                            <Form.Label className=\"bianco\">Inserisci email</Form.Label>\r\n                                                                            <Form.Control type=\"email\" placeholder=\"Inserisci tua email\" />\r\n                                                                            <Form.Label className=\"bianco\">Inserisci messaggio da inviare al gestore</Form.Label>\r\n                                                                            <Form.Control as=\"textarea\" placeholder=\"Inserisci testo\" />\r\n                                                                            \r\n                                                                        </Form.Group>\r\n                                                                        \r\n                                                                    </Form.Row>\r\n                                                                    <Button id=\"formCG1\">Invia comunicazione</Button>\r\n\r\n                                                                </Form>\r\n                                                            </Accordion.Collapse>\r\n                                                        </div>\r\n                                                    </Accordion>\r\n                                                    <div className=\"infopren\">\r\n                                                    <h4>Dettagli struttura </h4>\r\n                                                    <Card className=\"propcard\" id=\"cardGP\">\r\n                                                    <Card.Body>\r\n                                                    <Card.Title><h5>{res.nome_proprieta}</h5></Card.Title>\r\n                                                    <Card.Img src={res.img}/>\r\n                                                    <Card.Text>\r\n                                                    <p className=\"bianco\">Codice struttura: {res.ref_proprieta}, Tipo struttura: {res.tipo_proprieta === 'bb' ? 'B&B' : 'Casa vacanza'}</p>\r\n                                                    <p className=\"bianco\" style = {{display: res.tipo_proprieta === 'bb' ? 'inline' : 'none'}}>Codice stanza: {res.id_stanza}</p>\r\n                                                    <p className=\"bianco\">Località: {res.localita} ({res.provincia}),Indirizzo: {res.indirizzo}</p>\r\n                                                    <p className=\"bianco\">Costo: {res.costo} euro</p>\r\n                                                    <p className=\"bianco\">Soggiornante: {res.nome_sogg} {res.cognome_sogg}</p>\r\n                                                    </Card.Text>\r\n                                                    </Card.Body>\r\n                                                    </Card>\r\n                                                    </div>\r\n                                                </Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n                                    </Accordion>\r\n                                </div>\r\n                            )) \r\n                        }   \r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default GestionePrenotazione;"]},"metadata":{},"sourceType":"module"}