{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\Frontend\\\\src\\\\GestioneUtente\\\\GestionePrenotazione.js\";\nimport React from 'react';\nimport './GestionePrenotazione.css';\nimport { Card, Accordion, Button, Form, Col } from 'react-bootstrap'; //import { CardColumn, ListGroup, ListGroupItem } from 'react-bootstrap'\n\nimport { Redirect } from 'react-router-dom';\n\nclass GestionePrenotazione extends React.Component {\n  constructor(props) {\n    //props : stati delle componenti parent\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.set_id = e => {\n      this.setState({\n        id_prenotazione: e\n      });\n    };\n\n    this.set_emailProprietario = e => {\n      this.setState({\n        ref_proprietario: e\n      });\n    };\n\n    this.onSubmitModifica = e => {\n      e.preventDefault();\n      const data = {\n        id_prenotazione: this.state.id_prenotazione,\n        data_partenza: this.state.data_partenza,\n        data_ritorno: this.state.data_ritorno\n      };\n      fetch('http://localhost:9000/updateDatePrenotazione/newDate', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.text()).then(result => {\n        this.setState({\n          apiResponse: JSON.parse(result)\n        });\n\n        if (this.state.apiResponse.status === 'error') {\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.apiResponse.message\n          });\n        } else {\n          this.setState({\n            success: true\n          });\n        }\n      });\n    };\n\n    this.onSubmitElimina = e => {\n      e.preventDefault();\n      const data = {\n        id_prenotazione: this.state.id_prenotazione\n      };\n      fetch('http://localhost:9000/deletePrenotazione/delete', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.text()).then(result => {\n        this.setState({\n          apiResponse: JSON.parse(result)\n        });\n\n        if (this.state.apiResponse.status === 'error') {\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.apiResponse.message\n          });\n        } else {\n          this.setState({\n            success: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      id_prenotazione: '',\n      data_partenza: '',\n      data_ritorno: '',\n      ref_proprietario: '',\n      email: localStorage.getItem('email'),\n      //variabili di cui abbiamo bisogno\n      apiResponse: [],\n      error: false,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    //interrogazione che viene effettuata all'apertura della pagina\n    const data = {\n      ref_cliente: this.state.email\n    }; //body richiesta http (in questo caso chiave primaria cioÃ¨ ref_cliente)\n\n    fetch('http://localhost:9000/searchPrenotazioneCliente/prenotazioneCliente', {\n      //metodo http in fetch\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => result.text()) //risultato interrogazione \n    .then(result => {\n      this.setState({\n        apiResponse: JSON.parse(result)\n      }); //rende array il risultato\n\n      if (this.state.apiResponse.status === 'error') {\n        //gestione errori\n        this.setState({\n          error: true,\n          errorMessage: 'this.state.apiResponse.message'\n        });\n      }\n    });\n  }\n\n  render() {\n    if (!localStorage.getItem('logged') || !localStorage.getItem('cliente')) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: \"Utente non autorizzato\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 20\n        }\n      });\n    } else if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: this.state.errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, \"Gestisci le tue prenotazioni\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, \"Le tue prenotazioni: \"), this.state.apiResponse.map(res => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containeracc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        border: \"light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headcac\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 53\n        }\n      }, \"ID: \", res.id_prenotazione), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 53\n        }\n      }, \"Partenza: \", new Date(res.data_partenza).toLocaleDateString()), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 53\n        }\n      }, \"Ritorno: \", new Date(res.data_ritorno).toLocaleDateString()), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 53\n        }\n      }, \"Stato: \", res.accettata ? 'Accettata' : 'In attesa di accettazione'), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"0\",\n        onClick: () => this.set_id(res.id_prenotazione),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 53\n        }\n      }, \"Dettagli\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 53\n        }\n      }, \"Dettagli struttura \"), /*#__PURE__*/React.createElement(Card, {\n        className: \"propcard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 53\n        }\n      }, res.nome_proprieta), /*#__PURE__*/React.createElement(Card.Img, {\n        src: res.img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 53\n        }\n      }, \"Codice struttura: \", res.ref_proprieta, \", Tipo struttura: \", res.tipo_proprieta === 'bb' ? 'B&B' : 'Casa vacanza'), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          display: res.tipo_proprieta === 'bb' ? 'none' : 'inline'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 53\n        }\n      }, \"ccccccc\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 53\n        }\n      }, \"Localit\\xE0: \", res.localita, \" (\", res.provincia, \"),Indirizzo: \", res.indirizzo), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 53\n        }\n      }, \"Costo: \", res.costo, \" euro\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 53\n        }\n      }, \"Soggiornante: \", res.nome_sogg, \" \", res.cognome_sogg)))), /*#__PURE__*/React.createElement(Accordion, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"acc3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        onClick: this.nomeFunzione,\n        variant: \"link\",\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 61\n        }\n      }, \"Modifica data prenotazione\"), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 61\n        }\n      }, \"Elimina prenotazione\"), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 61\n        }\n      }, \"Contatta il gestore\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tisfunnu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridDate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 77\n        }\n      }, \"Data di inizio\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"date\",\n        placeholder: \"Inserisci data di inizio\",\n        id: \"data_partenza\",\n        name: \"data_partenza\",\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 77\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridDate1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 77\n        }\n      }, \"Data fine\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"date\",\n        placeholder: \"Inserisci data di fine\",\n        id: \"data_ritorno\",\n        name: \"data_ritorno\",\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 77\n        }\n      })))), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 65\n        }\n      }, \"Modifica data\"))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 69\n        }\n      }, \"Sei sicuro di voler eliminare la tua prenotazione? Non riavrai indietro la caparra.\"), /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 69\n        }\n      }, \"Conferma\"), /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 69\n        }\n      }, \"Annulla\"))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"3\",\n        onClick: () => this.set_emailProprietario(res.ref_proprietario),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formGridContact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 77\n        }\n      }, \"Inserisci email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Inserisci tua email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 77\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 77\n        }\n      }, \"Inserisci messaggio da inviare al gestore\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        placeholder: \"Inserisci testo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 77\n        }\n      }))), /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 69\n        }\n      }, \"Invia comunicazione\")))))))))))));\n    }\n  }\n\n}\n\nexport default GestionePrenotazione;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/Frontend/src/GestioneUtente/GestionePrenotazione.js"],"names":["React","Card","Accordion","Button","Form","Col","Redirect","GestionePrenotazione","Component","constructor","props","onChange","e","setState","target","name","value","set_id","id_prenotazione","set_emailProprietario","ref_proprietario","onSubmitModifica","preventDefault","data","state","data_partenza","data_ritorno","fetch","method","headers","body","JSON","stringify","then","result","text","apiResponse","parse","status","error","errorMessage","message","success","onSubmitElimina","email","localStorage","getItem","componentDidMount","ref_cliente","render","pathname","map","res","Date","toLocaleDateString","accettata","nome_proprieta","img","ref_proprieta","tipo_proprieta","display","localita","provincia","indirizzo","costo","nome_sogg","cognome_sogg","nomeFunzione"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './GestionePrenotazione.css'\r\nimport {Card, Accordion, Button, Form, Col} from 'react-bootstrap'\r\n//import { CardColumn, ListGroup, ListGroupItem } from 'react-bootstrap'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass GestionePrenotazione extends React.Component {\r\n    constructor(props) {     //props : stati delle componenti parent\r\n        super(props);\r\n        this.state = {\r\n            id_prenotazione: '',\r\n            data_partenza: '',\r\n            data_ritorno: '',\r\n            ref_proprietario: '',\r\n            email: localStorage.getItem('email'),  //variabili di cui abbiamo bisogno\r\n            apiResponse: [] ,\r\n            error: false,\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() { //interrogazione che viene effettuata all'apertura della pagina\r\n        const data = {\r\n            ref_cliente: this.state.email\r\n        }; //body richiesta http (in questo caso chiave primaria cioÃ¨ ref_cliente)\r\n\r\n        fetch('http://localhost:9000/searchPrenotazioneCliente/prenotazioneCliente', { //metodo http in fetch\r\n            method:'POST',\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result)=> result.text())                  //risultato interrogazione \r\n        .then((result)=> {\r\n            this.setState({ apiResponse:JSON.parse(result) }); //rende array il risultato\r\n\r\n            if(this.state.apiResponse.status==='error') {       //gestione errori\r\n                this.setState({\r\n                    error:true, \r\n                    errorMessage:'this.state.apiResponse.message'\r\n                });\r\n            }\r\n        })\r\n   }\r\n\r\n   onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    set_id = (e) => {\r\n        this.setState({ id_prenotazione: e })\r\n    }\r\n\r\n    set_emailProprietario = (e) => {\r\n        this.setState({ ref_proprietario: e })\r\n    }\r\n\r\n    onSubmitModifica = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            id_prenotazione: this.state.id_prenotazione,\r\n            data_partenza: this.state.data_partenza,\r\n            data_ritorno: this.state.data_ritorno\r\n        }\r\n\r\n        fetch('http://localhost:9000/updateDatePrenotazione/newDate', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result)=>{\r\n            this.setState({ apiResponse:JSON.parse(result) });\r\n\r\n            if(this.state.apiResponse.status === 'error') {\r\n                this.setState({ error: true });\r\n                this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n            else {\r\n                this.setState({ success: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmitElimina = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            id_prenotazione: this.state.id_prenotazione,\r\n        }\r\n\r\n        fetch('http://localhost:9000/deletePrenotazione/delete', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result)=>{\r\n            this.setState({ apiResponse:JSON.parse(result) });\r\n\r\n            if(this.state.apiResponse.status === 'error') {\r\n                this.setState({ error: true });\r\n                this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n            else {\r\n                this.setState({ success: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(!localStorage.getItem('logged') || !localStorage.getItem('cliente')) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/ErrorPage\",\r\n                    state: { \r\n                        error: true,\r\n                        errorMessage: \"Utente non autorizzato\" \r\n                    }\r\n                }}\r\n            />\r\n        }\r\n        else if(this.state.error) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/ErrorPage\",\r\n                    state: { \r\n                        error: true,\r\n                        errorMessage: this.state.errorMessage \r\n                    }\r\n                }}\r\n            />\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"containerGP\">\r\n                    <div>\r\n                        <h1>Gestisci le tue prenotazioni</h1>\r\n                        <h5>Le tue prenotazioni: </h5>\r\n                        {        \r\n                            this.state.apiResponse.map(((res)=>\r\n                                <div className=\"containeracc\">\r\n                                    <Accordion>\r\n                                        <Card border=\"light\">\r\n                                                <div className=\"headcac\">\r\n                                                    <p>ID: {res.id_prenotazione}</p>\r\n                                                    <p>Partenza: {new Date(res.data_partenza).toLocaleDateString()}</p>\r\n                                                    <p>Ritorno: {new Date(res.data_ritorno).toLocaleDateString()}</p>\r\n                                                    <p>Stato: {res.accettata ? 'Accettata' : 'In attesa di accettazione'}</p>\r\n                                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" onClick = {() => this.set_id(res.id_prenotazione)}>\r\n                                                        Dettagli\r\n                                                    </Accordion.Toggle>\r\n                                                </div>\r\n                                            <Accordion.Collapse eventKey=\"0\">\r\n                                                <Card.Body>\r\n                                                    <h4>Dettagli struttura </h4>\r\n                                                    <Card className=\"propcard\">\r\n                                                    <Card.Body>\r\n                                                    <Card.Title>{res.nome_proprieta}</Card.Title>\r\n                                                    <Card.Img src={res.img}/>\r\n                                                    <Card.Text>\r\n                                                    <p>Codice struttura: {res.ref_proprieta}, Tipo struttura: {res.tipo_proprieta === 'bb' ? 'B&B' : 'Casa vacanza'}</p>\r\n                                                    <p style = {{display: res.tipo_proprieta === 'bb' ? 'none' : 'inline'}}>ccccccc</p>\r\n                                                    <p>LocalitÃ : {res.localita} ({res.provincia}),Indirizzo: {res.indirizzo}</p>\r\n                                                    <p>Costo: {res.costo} euro</p>\r\n                                                    <p>Soggiornante: {res.nome_sogg} {res.cognome_sogg}</p>\r\n                                                    </Card.Text>\r\n                                                    </Card.Body>\r\n                                                    </Card>\r\n                                                   \r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <div className=\"acc3\">\r\n                                                            <Accordion.Toggle as={Button} onClick={this.nomeFunzione} variant=\"link\" eventKey=\"1\">Modifica data prenotazione</Accordion.Toggle>\r\n                                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">Elimina prenotazione</Accordion.Toggle>\r\n                                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">Contatta il gestore</Accordion.Toggle>\r\n\r\n                                                            <Accordion.Collapse eventKey=\"1\">\r\n                                                                <div className=\"tisfunnu\">\r\n                                                                <Form>\r\n                                                                    <Form.Row>\r\n                                                                        <Form.Group as={Col} controlId=\"formGridDate\">\r\n                                                                            <Form.Label>Data di inizio</Form.Label>\r\n                                                                            <Form.Control \r\n                                                                                type=\"date\" \r\n                                                                                placeholder=\"Inserisci data di inizio\" \r\n                                                                                id = 'data_partenza'\r\n                                                                                name = 'data_partenza'\r\n                                                                                onChange = {this.onChange}\r\n                                                                            />\r\n                                                                        </Form.Group>\r\n                                                                        <Form.Group as={Col} controlId=\"formGridDate1\">\r\n                                                                            <Form.Label>Data fine</Form.Label>\r\n                                                                            <Form.Control \r\n                                                                                type=\"date\" \r\n                                                                                placeholder=\"Inserisci data di fine\" \r\n                                                                                id = 'data_ritorno'\r\n                                                                                name = 'data_ritorno'\r\n                                                                                onChange = {this.onChange}\r\n                                                                            />\r\n                                                                        </Form.Group>\r\n                                                                    </Form.Row>\r\n                                                                </Form>\r\n                                                                <Button variant=\"primary\" type=\"submit\">\r\n                                                                Modifica data\r\n                                                                 </Button>\r\n                                                                 </div>\r\n                                                            </Accordion.Collapse>\r\n\r\n                                                            <Accordion.Collapse eventKey=\"2\">\r\n                                                                <div>\r\n                                                                    <p>Sei sicuro di voler eliminare la tua prenotazione? Non riavrai indietro la caparra.</p>\r\n                                                                    <Button>Conferma</Button>\r\n                                                                    <Button>Annulla</Button>\r\n                                                                </div>\r\n                                                            </Accordion.Collapse>\r\n\r\n                                                            <Accordion.Collapse eventKey=\"3\" onClick = {() => this.set_emailProprietario(res.ref_proprietario)}>\r\n                                                                <Form>\r\n                                                                    <Form.Row>\r\n                                                                        <Form.Group controlId=\"formGridContact\">\r\n                                                                            <Form.Label>Inserisci email</Form.Label>\r\n                                                                            <Form.Control type=\"email\" placeholder=\"Inserisci tua email\" />\r\n                                                                            <Form.Label>Inserisci messaggio da inviare al gestore</Form.Label>\r\n                                                                            <Form.Control as=\"textarea\" placeholder=\"Inserisci testo\" />\r\n                                                                        </Form.Group>\r\n                                                                    </Form.Row>\r\n                                                                    <Button>Invia comunicazione</Button>\r\n                                                                </Form>\r\n                                                            </Accordion.Collapse>\r\n                                                        </div>\r\n                                                    </Accordion>\r\n                                                </Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n                                    </Accordion>\r\n                                </div>\r\n                            )) \r\n                        }   \r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default GestionePrenotazione;"]},"metadata":{},"sourceType":"module"}