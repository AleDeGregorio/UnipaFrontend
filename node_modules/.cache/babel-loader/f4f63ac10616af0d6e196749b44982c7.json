{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\Frontend\\\\src\\\\Ricerca\\\\AlloggiContainer.js\";\nimport React from \"react\";\nimport AlloggiFilter from './AlloggiFiltro';\nimport AlloggiList from \"./AlloggiLista\";\nimport './AlloggioLista.css';\nimport moment from \"moment\";\nimport { Redirect } from \"react-router-dom\";\n\nclass AlloggiContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        posti: e.posti ? e.posti : this.state.posti,\n        datiRicerca: e,\n        tipo: e.tipo ? e.tipo : this.state.tipo,\n        checkIn: e.checkIn,\n        checkOut: e.checkOut\n      }, () => {\n        var inizio = this.state.datiRicerca.endDate ? new Date(this.state.datiRicerca.startDate.format()) : new Date(moment().format());\n        var fine = this.state.datiRicerca.endDate ? new Date(this.state.datiRicerca.endDate.format()) : new Date(moment().add(1, 'days').format());\n        const offsetInizio = inizio.getTimezoneOffset();\n        inizio = new Date(inizio.getTime() - offsetInizio * 60 * 1000);\n        inizio = inizio.toISOString().slice(0, 10);\n        const offsetFine = fine.getTimezoneOffset();\n        fine = new Date(fine.getTime() - offsetFine * 60 * 1000);\n        fine = fine.toISOString().slice(0, 10);\n        const data = {\n          tipo: this.state.datiRicerca.tipo ? this.state.datiRicerca.tipo : '',\n          localita: this.state.datiRicerca.localita ? this.state.datiRicerca.localita : '',\n          provincia: '',\n          servizi: '',\n          posti: this.state.datiRicerca.posti ? this.state.datiRicerca.posti : '%%',\n          costo: this.state.datiRicerca.costo ? this.state.datiRicerca.costo : '',\n          checkIn: inizio,\n          checkOut: fine\n        };\n        fetch('http://localhost:9000/ricercaAlloggio/risultati', {\n          method: \"POST\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(result => result.text()).then(result => {\n          this.setState({\n            case: JSON.parse(result)\n          });\n\n          if (this.state.case.status === 'error') {\n            this.setState({\n              error: true\n            });\n            this.setState({\n              errorMessage: this.state.case.message\n            });\n          } else {\n            this.setState({\n              loading: false\n            });\n          }\n        });\n      });\n    };\n\n    this.onChangeServizi = e => {\n      this.setState({\n        posti: e.posti ? e.posti : this.state.posti,\n        datiRicerca: e\n      }, () => {\n        var inizio = this.state.datiRicerca.endDate ? new Date(this.state.datiRicerca.startDate.format()) : new Date(moment().format());\n        var fine = this.state.datiRicerca.endDate ? new Date(this.state.datiRicerca.endDate.format()) : new Date(moment().add(1, 'days').format());\n        const offsetInizio = inizio.getTimezoneOffset();\n        inizio = new Date(inizio.getTime() - offsetInizio * 60 * 1000);\n        inizio = inizio.toISOString().slice(0, 10);\n        const offsetFine = fine.getTimezoneOffset();\n        fine = new Date(fine.getTime() - offsetFine * 60 * 1000);\n        fine = fine.toISOString().slice(0, 10);\n        const data = {\n          tipo: this.state.datiRicerca.tipo ? this.state.datiRicerca.tipo : '',\n          localita: this.state.datiRicerca.localita ? this.state.datiRicerca.localita : '',\n          provincia: '',\n          servizi: e.searchServizi,\n          posti: this.state.datiRicerca.posti ? this.state.datiRicerca.posti : '%%',\n          costo: this.state.datiRicerca.costo ? this.state.datiRicerca.costo : '',\n          checkIn: inizio,\n          checkOut: fine\n        };\n        fetch('http://localhost:9000/ricercaAlloggio/risultati', {\n          method: \"POST\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(result => result.text()).then(result => {\n          //console.log(JSON.parse(result));\n          this.setState({\n            case: JSON.parse(result)\n          });\n\n          if (this.state.case.status === 'error') {\n            this.setState({\n              error: true\n            });\n            this.setState({\n              errorMessage: this.state.case.message\n            });\n          } else {\n            this.setState({\n              loading: false\n            });\n          }\n        });\n      });\n    };\n\n    this.state = {\n      case: this.props.case ? this.props.case : [],\n      posti: this.props.posti ? this.props.posti : 1,\n      checkIn: this.props.checkIn ? this.props.checkIn : '',\n      checkOut: this.props.checkOut ? this.props.checkOut : '',\n      localita: this.props.localita ? this.props.localita : '',\n      tipo: this.props.tipo ? this.props.tipo : '',\n      searchServizi: [],\n      datiRicerca: '',\n      apiResponse: [],\n      error: false,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:9000/servizi/all', {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(result => result.text()).then(result => {\n      this.setState({\n        apiResponse: JSON.parse(result)\n      });\n\n      if (this.state.apiResponse.status === 'error') {\n        this.setState({\n          error: true\n        });\n        this.setState({\n          errorMessage: this.state.apiResponse_strutture.message\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: this.state.errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AlloggiFilter, {\n        servizi: this.state.apiResponse,\n        posti: this.props.posti,\n        checkIn: this.state.checkIn,\n        checkOut: this.state.checkOut,\n        onChange: this.onChange,\n        onChangeServizi: this.onChangeServizi,\n        case: this.state.case,\n        localita: this.state.localita,\n        tipo: this.state.tipo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ListaProp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AlloggiList, {\n        case: this.state.case,\n        servizi: this.state.datiRicerca.searchServizi,\n        checkIn: this.state.checkIn,\n        checkOut: this.state.checkOut,\n        tipo: this.state.tipo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}\n\nexport default AlloggiContainer;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/Frontend/src/Ricerca/AlloggiContainer.js"],"names":["React","AlloggiFilter","AlloggiList","moment","Redirect","AlloggiContainer","Component","constructor","props","onChange","e","setState","posti","state","datiRicerca","tipo","checkIn","checkOut","inizio","endDate","Date","startDate","format","fine","add","offsetInizio","getTimezoneOffset","getTime","toISOString","slice","offsetFine","data","localita","provincia","servizi","costo","fetch","method","headers","body","JSON","stringify","then","result","text","case","parse","status","error","errorMessage","message","loading","onChangeServizi","searchServizi","apiResponse","componentDidMount","apiResponse_strutture","render","pathname"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport AlloggiFilter from './AlloggiFiltro';\r\nimport AlloggiList from \"./AlloggiLista\";\r\n\r\nimport './AlloggioLista.css'\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass AlloggiContainer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      case: this.props.case ? this.props.case : [],\r\n      posti: this.props.posti ? this.props.posti : 1,\r\n      checkIn: this.props.checkIn ? this.props.checkIn : '',\r\n      checkOut: this.props.checkOut ? this.props.checkOut : '',\r\n      localita: this.props.localita ? this.props.localita : '',\r\n      tipo: this.props.tipo ? this.props.tipo : '',\r\n      searchServizi: [],\r\n      datiRicerca: '',\r\n      apiResponse: [],\r\n      error: false,\r\n      errorMessage: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch('http://localhost:9000/servizi/all', {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    })\r\n    .then((result) => result.text())\r\n    .then((result) => {\r\n        this.setState({ apiResponse: JSON.parse(result) });\r\n    \r\n        if(this.state.apiResponse.status === 'error') {\r\n            this.setState({ error: true });\r\n            this.setState({ errorMessage: this.state.apiResponse_strutture.message });\r\n        }\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n\r\n    this.setState({ \r\n      posti: e.posti ? e.posti : this.state.posti, \r\n      datiRicerca: e,\r\n      tipo: e.tipo ? e.tipo : this.state.tipo,\r\n      checkIn: e.checkIn,\r\n      checkOut: e.checkOut\r\n    }, () => {\r\n      var inizio = this.state.datiRicerca.endDate ? new Date(this.state.datiRicerca.startDate.format()) : new Date(moment().format());\r\n      var fine = this.state.datiRicerca.endDate ? new Date(this.state.datiRicerca.endDate.format()) : new Date(moment().add(1, 'days').format());\r\n      \r\n      const offsetInizio = inizio.getTimezoneOffset();\r\n      inizio = new Date(inizio.getTime() - (offsetInizio*60*1000));\r\n      inizio = inizio.toISOString().slice(0,10);\r\n\r\n      const offsetFine = fine.getTimezoneOffset();\r\n      fine = new Date(fine.getTime() - (offsetFine*60*1000));\r\n      fine = fine.toISOString().slice(0,10);\r\n\r\n      const data = {\r\n        tipo: this.state.datiRicerca.tipo ? this.state.datiRicerca.tipo : '',\r\n        localita: this.state.datiRicerca.localita ? this.state.datiRicerca.localita : '',\r\n        provincia: '',\r\n        servizi: '',\r\n        posti: this.state.datiRicerca.posti ? this.state.datiRicerca.posti : '%%',\r\n        costo: this.state.datiRicerca.costo ? this.state.datiRicerca.costo : '',\r\n        checkIn: inizio,\r\n        checkOut: fine\r\n      };\r\n  \r\n      fetch('http://localhost:9000/ricercaAlloggio/risultati', {\r\n          method: \"POST\",\r\n          headers: {\r\n              'Content-type': 'application/json'\r\n          },\r\n          body: JSON.stringify(data)\r\n      })\r\n      .then((result) => result.text())\r\n      .then((result) => {\r\n          this.setState({ case: JSON.parse(result) });\r\n  \r\n          if(this.state.case.status === 'error') {\r\n            this.setState({ error: true });\r\n            this.setState({ errorMessage: this.state.case.message });\r\n          }\r\n          else {\r\n            this.setState({ loading: false });\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  onChangeServizi = (e) => {\r\n\r\n    this.setState({ posti: e.posti ? e.posti : this.state.posti, datiRicerca: e }, () => {\r\n      var inizio = this.state.datiRicerca.endDate ? new Date(this.state.datiRicerca.startDate.format()) : new Date(moment().format());\r\n      var fine = this.state.datiRicerca.endDate ? new Date(this.state.datiRicerca.endDate.format()) : new Date(moment().add(1, 'days').format());\r\n      \r\n      const offsetInizio = inizio.getTimezoneOffset();\r\n      inizio = new Date(inizio.getTime() - (offsetInizio*60*1000));\r\n      inizio = inizio.toISOString().slice(0,10);\r\n\r\n      const offsetFine = fine.getTimezoneOffset();\r\n      fine = new Date(fine.getTime() - (offsetFine*60*1000));\r\n      fine = fine.toISOString().slice(0,10);\r\n\r\n      const data = {\r\n        tipo: this.state.datiRicerca.tipo ? this.state.datiRicerca.tipo : '',\r\n        localita: this.state.datiRicerca.localita ? this.state.datiRicerca.localita : '',\r\n        provincia: '',\r\n        servizi: e.searchServizi,\r\n        posti: this.state.datiRicerca.posti ? this.state.datiRicerca.posti : '%%',\r\n        costo: this.state.datiRicerca.costo ? this.state.datiRicerca.costo : '',\r\n        checkIn: inizio,\r\n        checkOut: fine\r\n      };\r\n  \r\n      fetch('http://localhost:9000/ricercaAlloggio/risultati', {\r\n          method: \"POST\",\r\n          headers: {\r\n              'Content-type': 'application/json'\r\n          },\r\n          body: JSON.stringify(data)\r\n      })\r\n      .then((result) => result.text())\r\n      .then((result) => {\r\n          //console.log(JSON.parse(result));\r\n          this.setState({ case: JSON.parse(result) });\r\n  \r\n          if(this.state.case.status === 'error') {\r\n            this.setState({ error: true });\r\n            this.setState({ errorMessage: this.state.case.message });\r\n          }\r\n          else {\r\n            this.setState({ loading: false });\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <Redirect \r\n        to = {{\r\n          pathname: \"/ErrorPage\",\r\n          state: {\r\n            error: true,\r\n            errorMessage: this.state.errorMessage\r\n          }\r\n        }}\r\n      />\r\n    }\r\n    else {\r\n      return (\r\n        <>\r\n          <AlloggiFilter \r\n            servizi={this.state.apiResponse} \r\n            posti = {this.props.posti} \r\n            checkIn = {this.state.checkIn}\r\n            checkOut = {this.state.checkOut}\r\n            onChange = {this.onChange} \r\n            onChangeServizi = {this.onChangeServizi}\r\n            case = {this.state.case}\r\n            localita = {this.state.localita}\r\n            tipo = {this.state.tipo}\r\n          />\r\n          <div className=\"ListaProp\">\r\n            <AlloggiList \r\n              case={this.state.case} \r\n              servizi = {this.state.datiRicerca.searchServizi} \r\n              checkIn = {this.state.checkIn} \r\n              checkOut = {this.state.checkOut}\r\n              tipo = {this.state.tipo}\r\n              />\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default AlloggiContainer;"]},"metadata":{},"sourceType":"module"}