{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\Frontend\\\\src\\\\GestioneUtente\\\\GestionePrenotazione.js\";\nimport React from 'react';\nimport './GestionePrenotazione.css';\nimport { Card, Accordion, Button, Form, Col } from 'react-bootstrap';\nimport moment from \"moment\";\nimport { SingleDatePicker } from \"react-dates\"; //import { CardColumn, ListGroup, ListGroupItem } from 'react-bootstrap'\n\nimport { Redirect } from 'react-router-dom';\n\nclass GestionePrenotazione extends React.Component {\n  constructor(props) {\n    //props : stati delle componenti parent\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.set_id = e => {\n      this.setState({\n        id_prenotazione: e\n      });\n    };\n\n    this.set_emailProprietario = e => {\n      this.setState({\n        ref_proprietario: e\n      });\n    };\n\n    this.set_focused_checkIn = e => {\n      console.log(e);\n      this.setState({\n        checkInFocus: e\n      });\n    };\n\n    this.set_focused_checkOut = e => {\n      this.setState({\n        checkOutFocus: e\n      });\n    };\n\n    this.setStartDate = e => {\n      this.setState({\n        startDate: e\n      });\n    };\n\n    this.setEndDate = e => {\n      this.setState({\n        endDate: e\n      });\n    };\n\n    this.onSubmitModifica = e => {\n      e.preventDefault();\n      const data = {\n        id_prenotazione: this.state.id_prenotazione,\n        data_partenza: this.state.data_partenza,\n        data_ritorno: this.state.data_ritorno\n      };\n      fetch('http://localhost:9000/updateDatePrenotazione/newDate', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.text()).then(result => {\n        this.setState({\n          apiResponse: JSON.parse(result)\n        });\n        var res = JSON.parse(result);\n\n        if (res.length < 1 || res.code && res.code === 404) {\n          this.setState({\n            empty: true,\n            errorMessage: res.message\n          });\n        } else if (this.state.apiResponse.status === 'error') {\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.apiResponse.message\n          });\n        } else {\n          this.setState({\n            success: true\n          });\n        }\n      });\n    };\n\n    this.onSubmitElimina = e => {\n      e.preventDefault();\n      const data = {\n        id_prenotazione: this.state.id_prenotazione\n      };\n      fetch('http://localhost:9000/deletePrenotazione/delete', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.text()).then(result => {\n        this.setState({\n          apiResponse: JSON.parse(result)\n        });\n        var res = JSON.parse(result);\n\n        if (res.length < 1 || res.code && res.code === 404) {\n          this.setState({\n            empty: true,\n            errorMessage: res.message\n          });\n        } else if (this.state.apiResponse.status === 'error') {\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.apiResponse.message\n          });\n        } else {\n          this.setState({\n            success: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      id_prenotazione: '',\n      data_partenza: '',\n      data_ritorno: '',\n      ref_proprietario: '',\n      email: localStorage.getItem('email'),\n      //variabili di cui abbiamo bisogno\n      apiResponse: [],\n      error: false,\n      errorMessage: '',\n      empty: false,\n      checkInFocus: null,\n      checkOutFocus: null,\n      startDate: moment(),\n      endDate: null\n    };\n  }\n\n  componentDidMount() {\n    //interrogazione che viene effettuata all'apertura della pagina\n    const data = {\n      ref_cliente: this.state.email\n    }; //body richiesta http (in questo caso chiave primaria cioÃ¨ ref_cliente)\n\n    fetch('http://localhost:9000/searchPrenotazioneCliente/prenotazioneCliente', {\n      //metodo http in fetch\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => result.text()) //risultato interrogazione \n    .then(result => {\n      this.setState({\n        apiResponse: JSON.parse(result)\n      }); //rende array il risultato\n\n      var res = JSON.parse(result);\n\n      if (res.length < 1 || res.code && res.code === 404) {\n        this.setState({\n          empty: true,\n          errorMessage: res.message\n        });\n      } else if (this.state.apiResponse.status === 'error') {\n        this.setState({\n          error: true\n        });\n        this.setState({\n          errorMessage: this.state.apiResponse.message\n        });\n      }\n    });\n  }\n\n  render() {\n    if (!localStorage.getItem('logged') || !localStorage.getItem('cliente')) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: \"Utente non autorizzato\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 20\n        }\n      });\n    } else if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: this.state.errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 20\n        }\n      });\n    } else if (this.state.empty) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }\n      }, \"Gestisci le tue prenotazioni\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }\n      }, \"Si \\xE8 verificato un errore: \", this.state.errorMessage)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, \"Gestisci le tue prenotazioni\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      }, \"Le tue prenotazioni: \"), this.state.apiResponse.map(res => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containeracc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        border: \"light\",\n        id: \"cardGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headcac\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 53\n        }\n      }, \"ID: \", res.id_prenotazione), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 53\n        }\n      }, \"Partenza: \", new Date(res.data_partenza).toLocaleDateString()), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 53\n        }\n      }, \"Ritorno: \", new Date(res.data_ritorno).toLocaleDateString()), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 53\n        }\n      }, \"Stato: \", res.accettata === null ? 'In attesa di accettazione' : res.accettata === 1 ? 'Accettata' : 'Rifiutata'), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"0\",\n        id: \"accbutt1\",\n        onClick: () => this.set_id(res.id_prenotazione),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 53\n        }\n      }, \"Dettagli\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"infopren\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 53\n        }\n      }, \"Dettagli struttura \"), /*#__PURE__*/React.createElement(Card, {\n        className: \"propcard\",\n        id: \"cardGP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 65\n        }\n      }, res.nome_proprieta)), /*#__PURE__*/React.createElement(Card.Img, {\n        src: res.img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 53\n        }\n      }, \"Codice struttura: \", res.ref_proprieta, \", Tipo struttura: \", res.tipo_proprieta === 'bb' ? 'B&B' : 'Casa vacanza'), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        style: {\n          display: res.tipo_proprieta === 'bb' ? 'inline' : 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 53\n        }\n      }, \"Codice stanza: \", res.id_stanza), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 53\n        }\n      }, \"Localit\\xE0: \", res.localita, \" (\", res.provincia, \"),Indirizzo: \", res.indirizzo), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 53\n        }\n      }, \"Costo: \", res.costo, \" euro\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 53\n        }\n      }, \"Soggiornante: \", res.nome_sogg, \" \", res.cognome_sogg))))), /*#__PURE__*/React.createElement(Accordion, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"acc3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"just-cont\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        onClick: this.nomeFunzione,\n        id: \"accbutton\",\n        variant: \"link\",\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 61\n        }\n      }, \"Modifica data prenotazione\"), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"2\",\n        id: \"accbutton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 61\n        }\n      }, \"Elimina prenotazione\"), /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"3\",\n        id: \"accbutton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 61\n        }\n      }, \"Contatta il gestore\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"changeData\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridDate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 77\n        }\n      }, \"Data di inizio\"), /*#__PURE__*/React.createElement(SingleDatePicker, {\n        class: \"search-element\",\n        date: this.state.startDate,\n        onDateChange: date => this.setStartDate(date),\n        focused: true,\n        onFocusChange: ({\n          focused\n        }) => this.set_focused_checkIn(focused),\n        id: \"start_date\",\n        numberOfMonths: 1,\n        placeholder: \"gg/mm/aaaa\",\n        daySize: 32,\n        hideKeyboardShortcutsPanel: true,\n        displayFormat: \"DD/MM/YYYY\",\n        block: true,\n        verticalSpacing: 8,\n        showClearDate: this.state.checkInFocus,\n        reopenPickerOnClearDate: true,\n        noBorder: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 77\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridDate1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 77\n        }\n      }, \"Data fine\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"date\",\n        placeholder: \"Inserisci data di fine\",\n        id: \"data_ritorno\",\n        name: \"data_ritorno\",\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 77\n        }\n      })))), /*#__PURE__*/React.createElement(Button, {\n        id: \"cambiadata\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 65\n        }\n      }, \"Modifica data\"))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 69\n        }\n      }, \"Sei sicuro di voler eliminare la tua prenotazione? Non riavrai indietro la caparra.\"), /*#__PURE__*/React.createElement(Button, {\n        id: \"annulla1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 69\n        }\n      }, \"Conferma\"), /*#__PURE__*/React.createElement(Button, {\n        id: \"annulla2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 69\n        }\n      }, \"Annulla\"))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: \"3\",\n        onClick: () => this.set_emailProprietario(res.ref_proprietario),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        className: \"formCG\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formGridContact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 77\n        }\n      }, \"Inserisci email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Inserisci tua email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 77\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"bianco\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 77\n        }\n      }, \"Inserisci messaggio da inviare al gestore\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        placeholder: \"Inserisci testo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 77\n        }\n      }))), /*#__PURE__*/React.createElement(Button, {\n        id: \"formCG1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 69\n        }\n      }, \"Invia comunicazione\")))))))))))));\n    }\n  }\n\n}\n\nexport default GestionePrenotazione;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/Frontend/src/GestioneUtente/GestionePrenotazione.js"],"names":["React","Card","Accordion","Button","Form","Col","moment","SingleDatePicker","Redirect","GestionePrenotazione","Component","constructor","props","onChange","e","setState","target","name","value","set_id","id_prenotazione","set_emailProprietario","ref_proprietario","set_focused_checkIn","console","log","checkInFocus","set_focused_checkOut","checkOutFocus","setStartDate","startDate","setEndDate","endDate","onSubmitModifica","preventDefault","data","state","data_partenza","data_ritorno","fetch","method","headers","body","JSON","stringify","then","result","text","apiResponse","parse","res","length","code","empty","errorMessage","message","status","error","success","onSubmitElimina","email","localStorage","getItem","componentDidMount","ref_cliente","render","pathname","map","Date","toLocaleDateString","accettata","nome_proprieta","img","ref_proprieta","tipo_proprieta","display","id_stanza","localita","provincia","indirizzo","costo","nome_sogg","cognome_sogg","nomeFunzione","date","focused"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './GestionePrenotazione.css'\r\nimport {Card, Accordion, Button, Form, Col} from 'react-bootstrap'\r\nimport moment from \"moment\";\r\nimport { SingleDatePicker } from \"react-dates\";\r\n//import { CardColumn, ListGroup, ListGroupItem } from 'react-bootstrap'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass GestionePrenotazione extends React.Component {\r\n\r\n    constructor(props) {     //props : stati delle componenti parent\r\n        super(props);\r\n        this.state = {\r\n            id_prenotazione: '',\r\n            data_partenza: '',\r\n            data_ritorno: '',\r\n            ref_proprietario: '',\r\n            email: localStorage.getItem('email'),  //variabili di cui abbiamo bisogno\r\n            apiResponse: [] ,\r\n            error: false,\r\n            errorMessage: '',\r\n            empty: false,\r\n            checkInFocus: null,\r\n            checkOutFocus: null,\r\n            startDate: moment(),\r\n            endDate: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() { //interrogazione che viene effettuata all'apertura della pagina\r\n        const data = {\r\n            ref_cliente: this.state.email\r\n        }; //body richiesta http (in questo caso chiave primaria cioÃ¨ ref_cliente)\r\n\r\n        fetch('http://localhost:9000/searchPrenotazioneCliente/prenotazioneCliente', { //metodo http in fetch\r\n            method:'POST',\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result)=> result.text())                  //risultato interrogazione \r\n        .then((result)=> {\r\n            this.setState({ apiResponse:JSON.parse(result) }); //rende array il risultato\r\n            var res = JSON.parse(result);\r\n\r\n            if(res.length < 1 || (res.code && res.code === 404)) {\r\n              this.setState({ empty: true, errorMessage: res.message });\r\n            }\r\n      \r\n            else if(this.state.apiResponse.status === 'error') {\r\n              this.setState({ error: true });\r\n              this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n        })\r\n   }\r\n\r\n   onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    set_id = (e) => {\r\n        this.setState({ id_prenotazione: e })\r\n    }\r\n\r\n    set_emailProprietario = (e) => {\r\n        this.setState({ ref_proprietario: e })\r\n    }\r\n\r\n    set_focused_checkIn = (e) => {\r\n        console.log(e);\r\n        this.setState({ checkInFocus: e });\r\n    }\r\n\r\n    set_focused_checkOut = (e) => {\r\n        this.setState({ checkOutFocus: e });\r\n    }\r\n\r\n    setStartDate = (e) => {\r\n        this.setState({ startDate: e });\r\n    }\r\n\r\n    setEndDate = (e) => {\r\n        this.setState({ endDate: e });\r\n    }\r\n\r\n    onSubmitModifica = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            id_prenotazione: this.state.id_prenotazione,\r\n            data_partenza: this.state.data_partenza,\r\n            data_ritorno: this.state.data_ritorno\r\n        }\r\n\r\n        fetch('http://localhost:9000/updateDatePrenotazione/newDate', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result)=>{\r\n            this.setState({ apiResponse:JSON.parse(result) });\r\n            var res = JSON.parse(result);\r\n\r\n            if(res.length < 1 || (res.code && res.code === 404)) {\r\n              this.setState({ empty: true, errorMessage: res.message });\r\n            }\r\n      \r\n            else if(this.state.apiResponse.status === 'error') {\r\n              this.setState({ error: true });\r\n              this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n            else {\r\n                this.setState({ success: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmitElimina = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            id_prenotazione: this.state.id_prenotazione,\r\n        }\r\n\r\n        fetch('http://localhost:9000/deletePrenotazione/delete', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result)=>{\r\n            this.setState({ apiResponse:JSON.parse(result) });\r\n            var res = JSON.parse(result);\r\n\r\n            if(res.length < 1 || (res.code && res.code === 404)) {\r\n              this.setState({ empty: true, errorMessage: res.message });\r\n            }\r\n      \r\n            else if(this.state.apiResponse.status === 'error') {\r\n              this.setState({ error: true });\r\n              this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n            else {\r\n                this.setState({ success: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(!localStorage.getItem('logged') || !localStorage.getItem('cliente')) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/ErrorPage\",\r\n                    state: { \r\n                        error: true,\r\n                        errorMessage: \"Utente non autorizzato\" \r\n                    }\r\n                }}\r\n            />\r\n        }\r\n        else if(this.state.error) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/ErrorPage\",\r\n                    state: { \r\n                        error: true,\r\n                        errorMessage: this.state.errorMessage \r\n                    }\r\n                }}\r\n            />\r\n        }\r\n        else if(this.state.empty) {\r\n            return (\r\n                <div className=\"containerGP\">\r\n                    <div>\r\n                        <h1>Gestisci le tue prenotazioni</h1>\r\n                        <p>Si Ã¨ verificato un errore: {this.state.errorMessage}</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } \r\n        else {\r\n            return (\r\n                <div className=\"containerGP\">\r\n                    <div>\r\n                        <h1>Gestisci le tue prenotazioni</h1>\r\n                        <h5>Le tue prenotazioni: </h5>\r\n                        {        \r\n                            this.state.apiResponse.map(((res)=> \r\n                                <div className=\"containeracc\">\r\n                                    <Accordion>\r\n                                        <Card border=\"light\" id=\"cardGP\">\r\n                                                <div className=\"headcac\">\r\n                                                    <p className=\"bianco\">ID: {res.id_prenotazione}</p>\r\n                                                    <p className=\"bianco\">Partenza: {new Date(res.data_partenza).toLocaleDateString()}</p>\r\n                                                    <p className=\"bianco\">Ritorno: {new Date(res.data_ritorno).toLocaleDateString()}</p>\r\n                                                    <p className=\"bianco\">Stato: {res.accettata === null ? 'In attesa di accettazione' : (res.accettata === 1 ? 'Accettata' : 'Rifiutata')}</p>\r\n                                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" id=\"accbutt1\" onClick = {() => this.set_id(res.id_prenotazione)}>\r\n                                                        Dettagli\r\n                                                    </Accordion.Toggle>\r\n                                                </div>\r\n                                            <Accordion.Collapse eventKey=\"0\">\r\n                                                <Card.Body>\r\n                                                    <div className=\"infopren\">\r\n                                                    <h4>Dettagli struttura </h4>\r\n                                                    <Card className=\"propcard\" id=\"cardGP\">\r\n                                                    <Card.Body>\r\n                                                    <Card.Title><h5>{res.nome_proprieta}</h5></Card.Title>\r\n                                                    <Card.Img src={res.img}/>\r\n                                                    <Card.Text>\r\n                                                    <p className=\"bianco\">Codice struttura: {res.ref_proprieta}, Tipo struttura: {res.tipo_proprieta === 'bb' ? 'B&B' : 'Casa vacanza'}</p>\r\n                                                    <p className=\"bianco\" style = {{display: res.tipo_proprieta === 'bb' ? 'inline' : 'none'}}>Codice stanza: {res.id_stanza}</p>\r\n                                                    <p className=\"bianco\">LocalitÃ : {res.localita} ({res.provincia}),Indirizzo: {res.indirizzo}</p>\r\n                                                    <p className=\"bianco\">Costo: {res.costo} euro</p>\r\n                                                    <p className=\"bianco\">Soggiornante: {res.nome_sogg} {res.cognome_sogg}</p>\r\n                                                    </Card.Text>\r\n                                                    </Card.Body>\r\n                                                    </Card>\r\n                                                    </div>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <div className=\"acc3\">\r\n                                                            <div className=\"just-cont\">\r\n                                                            <Accordion.Toggle as={Button} onClick={this.nomeFunzione} id=\"accbutton\" variant=\"link\" eventKey=\"1\">Modifica data prenotazione</Accordion.Toggle>\r\n                                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" id=\"accbutton\">Elimina prenotazione</Accordion.Toggle>\r\n                                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\" id=\"accbutton\">Contatta il gestore</Accordion.Toggle>\r\n                                                            </div>\r\n                                                            <Accordion.Collapse eventKey=\"1\">\r\n                                                                <div className=\"changeData\">\r\n                                                                <Form>\r\n                                                                    <Form.Row>\r\n                                                                        <Form.Group as={Col} controlId=\"formGridDate\">\r\n                                                                            <Form.Label className=\"bianco\">Data di inizio</Form.Label>\r\n                                                                            <SingleDatePicker\r\n                                                                                class=\"search-element\"\r\n                                                                                date={this.state.startDate}\r\n                                                                                onDateChange={date => this.setStartDate(date)}\r\n                                                                                focused={true}\r\n                                                                                onFocusChange={({ focused }) => this.set_focused_checkIn(focused)}\r\n                                                                                id=\"start_date\"\r\n                                                                                numberOfMonths={1}\r\n                                                                                placeholder=\"gg/mm/aaaa\"\r\n                                                                                daySize={32}\r\n                                                                                hideKeyboardShortcutsPanel={true}\r\n                                                                                displayFormat=\"DD/MM/YYYY\"\r\n                                                                                block={true}\r\n                                                                                verticalSpacing={8}\r\n                                                                                showClearDate={this.state.checkInFocus}\r\n                                                                                reopenPickerOnClearDate={true}\r\n                                                                                noBorder={true}\r\n                                                                            />\r\n                                                                        </Form.Group>\r\n                                                                        <Form.Group as={Col} controlId=\"formGridDate1\">\r\n                                                                            <Form.Label className=\"bianco\">Data fine</Form.Label>\r\n                                                                            <Form.Control \r\n                                                                                type=\"date\" \r\n                                                                                placeholder=\"Inserisci data di fine\" \r\n                                                                                id = 'data_ritorno'\r\n                                                                                name = 'data_ritorno'\r\n                                                                                onChange = {this.onChange}\r\n                                                                            />\r\n                                                                        </Form.Group>\r\n                                                                    </Form.Row>\r\n                                                                </Form>\r\n                                                                <Button id=\"cambiadata\" type=\"submit\">\r\n                                                                Modifica data\r\n                                                                 </Button>\r\n                                                                 </div>\r\n                                                            </Accordion.Collapse>\r\n\r\n                                                            <Accordion.Collapse eventKey=\"2\">\r\n                                                                <div>\r\n                                                                    <p className=\"bianco\">Sei sicuro di voler eliminare la tua prenotazione? Non riavrai indietro la caparra.</p>\r\n                                                                    <Button id=\"annulla1\">Conferma</Button>\r\n                                                                    <Button id=\"annulla2\">Annulla</Button>\r\n                                                                </div>\r\n                                                            </Accordion.Collapse>\r\n\r\n                                                            <Accordion.Collapse eventKey=\"3\" onClick = {() => this.set_emailProprietario(res.ref_proprietario)}>\r\n                                                                <Form className=\"formCG\">\r\n                                                                    <Form.Row>\r\n                                                                        <Form.Group controlId=\"formGridContact\">\r\n                                                                            <Form.Label className=\"bianco\">Inserisci email</Form.Label>\r\n                                                                            <Form.Control type=\"email\" placeholder=\"Inserisci tua email\" />\r\n                                                                            <Form.Label className=\"bianco\">Inserisci messaggio da inviare al gestore</Form.Label>\r\n                                                                            <Form.Control as=\"textarea\" placeholder=\"Inserisci testo\" />\r\n                                                                            \r\n                                                                        </Form.Group>\r\n                                                                        \r\n                                                                    </Form.Row>\r\n                                                                    <Button id=\"formCG1\">Invia comunicazione</Button>\r\n\r\n                                                                </Form>\r\n                                                            </Accordion.Collapse>\r\n                                                        </div>\r\n                                                    </Accordion>\r\n                                                </Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n                                    </Accordion>\r\n                                </div>\r\n                            )) \r\n                        }   \r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default GestionePrenotazione;"]},"metadata":{},"sourceType":"module"}