{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\Frontend\\\\src\\\\Autenticazione\\\\autenticazioneRegistratiCliente.js\";\nimport React from 'react';\nimport { Form, Col, Button } from 'react-bootstrap'; //import { Row } from 'react-bootstrap'\n\nimport { Link } from 'react-router-dom';\nimport './autenticazione.css';\nimport { Redirect } from 'react-router-dom';\n\nclass autenticazioneRegistratiCliente extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmitInsert = e => {\n      e.preventDefault();\n\n      if (this.state.password !== this.state.confirmPassword) {\n        this.setState({\n          errorPswd: true\n        });\n        return;\n      }\n\n      const data = {\n        email: this.state.email,\n        password: this.state.password,\n        nome: this.state.nome,\n        cognome: this.state.cognome,\n        nascita: new Date(this.state.nascita).toLocaleDateString(),\n        telefono: this.state.telefono\n      };\n      fetch('http://localhost:9000/insertCliente/new', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.text()).then(result => {\n        this.setState({\n          apiResponse: JSON.parse(result)\n        });\n        var res = JSON.parse(result);\n\n        if (res.length < 1 || res.code && res.code === 404) {\n          this.setState({\n            empty: true,\n            errorMessage: res.message\n          });\n        } else if (this.state.apiResponse.status === 'error') {\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.apiResponse.message\n          });\n        } else {\n          this.setState({\n            success: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      nome: '',\n      cognome: '',\n      nascita: '',\n      telefono: '',\n      apiResponse: [],\n      error: false,\n      errorPswd: false,\n      errorMessage: '',\n      success: false,\n      empty: false,\n      maxDate: ''\n    };\n  }\n\n  componentDidMount() {\n    var today = new Date();\n    const offset = today.getTimezoneOffset();\n    today = new Date(today.getTime() - offset * 60 * 1000);\n    this.setState({\n      maxDate: today.toISOString().slice(0, 10)\n    });\n  }\n\n  render() {\n    var pswdError;\n\n    if (this.state.success) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Errore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, \"Registrazione avvenuta con successo!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, \"Effettua pure il login, e comincia a navigare dove preferisci\"));\n    }\n\n    if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: this.state.errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.state.empty) {\n      return /*#__PURE__*/React.createElement(Form, {\n        className: \"contenitoreAutenticazione\",\n        onSubmit: this.onSubmitInsert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contentNewCheckAutenticazione\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, \"Iscriviti\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, \"Si \\xE8 verificato un errore: \", this.state.errorMessage), /*#__PURE__*/React.createElement(Link, {\n        to: \"/autenticazioneRegistrati\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, \"Torna indietro\")));\n    }\n\n    if (this.state.errorPswd) {\n      pswdError = /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, \"Password non coincidenti\");\n    }\n\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"contenitoreAutenticazione\",\n      onSubmit: this.onSubmitInsert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contentNewCheckAutenticazione\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \"Iscriviti\"), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, \"Nome\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"name\",\n      placeholder: \"Nome\",\n      id: \"nome\",\n      name: \"nome\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSurname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \"Cognome\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"surname\",\n      placeholder: \"Cognome\",\n      id: \"cognome\",\n      name: \"cognome\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"E-mail\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"E-mail\",\n      id: \"email\",\n      name: \"email\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      title: \"Almeno 8 caratteri, una lettera maiuscola e un numero\",\n      pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$\",\n      placeholder: \"Password\",\n      id: \"password\",\n      name: \"password\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, \"Conferma password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      title: \"Almeno 8 caratteri, una lettera maiuscola e un numero\",\n      pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$\",\n      placeholder: \"Conferma password\",\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }), pswdError), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridIndirizzo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, \"Telefono\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"tel\",\n      placeholder: \"Telefono\",\n      id: \"telefono\",\n      name: \"telefono\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridCap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"Data di nascita\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      required: true,\n      className: \"inputSignUp\",\n      id: \"nascita\",\n      max: this.state.maxDate,\n      name: \"nascita\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/autenticazioneRegistrati\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, \"Torna indietro\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      className: \"pulsante\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, \"Registrati\"));\n  }\n\n}\n\nexport default autenticazioneRegistratiCliente;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/Frontend/src/Autenticazione/autenticazioneRegistratiCliente.js"],"names":["React","Form","Col","Button","Link","Redirect","autenticazioneRegistratiCliente","Component","constructor","props","onChange","e","setState","target","name","value","onSubmitInsert","preventDefault","state","password","confirmPassword","errorPswd","data","email","nome","cognome","nascita","Date","toLocaleDateString","telefono","fetch","method","headers","body","JSON","stringify","then","result","text","apiResponse","parse","res","length","code","empty","errorMessage","message","status","error","success","maxDate","componentDidMount","today","offset","getTimezoneOffset","getTime","toISOString","slice","render","pswdError","pathname","color"],"mappings":"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","sourcesContent":["import React from 'react';    \r\nimport {Form, Col, Button} from 'react-bootstrap'\r\n//import { Row } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport './autenticazione.css'\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass autenticazioneRegistratiCliente extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            nome: '',\r\n            cognome: '',\r\n            nascita: '',\r\n            telefono: '',\r\n            apiResponse: [],\r\n            error:false,\r\n            errorPswd: false,\r\n            errorMessage:'',\r\n            success: false,\r\n            empty: false,\r\n            maxDate: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        var today = new Date();\r\n        const offset = today.getTimezoneOffset()\r\n        today = new Date(today.getTime() - (offset*60*1000))\r\n        \r\n        this.setState({ maxDate: today.toISOString().slice(0,10) })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitInsert = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(this.state.password !== this.state.confirmPassword) {\r\n            this.setState({ \r\n                errorPswd: true\r\n            });\r\n            \r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            nome: this.state.nome,\r\n            cognome: this.state.cognome,\r\n            nascita: new Date(this.state.nascita).toLocaleDateString(),\r\n            telefono: this.state.telefono\r\n        }\r\n\r\n        fetch('http://localhost:9000/insertCliente/new', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result)=>{\r\n            this.setState({ apiResponse:JSON.parse(result) });\r\n            var res = JSON.parse(result);\r\n\r\n            if(res.length < 1 || (res.code && res.code === 404)) {\r\n              this.setState({ empty: true, errorMessage: res.message });\r\n            }\r\n      \r\n            else if(this.state.apiResponse.status === 'error') {\r\n              this.setState({ error: true });\r\n              this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n            else {\r\n                this.setState({ success: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var pswdError;\r\n\r\n        if(this.state.success) {\r\n            return (\r\n                <div className = 'Errore'>\r\n                    <h1>Registrazione avvenuta con successo!</h1>\r\n                    <p>Effettua pure il login, e comincia a navigare dove preferisci</p>\r\n                </div>\r\n            );\r\n        }\r\n        if (this.state.error) {\r\n            return <Redirect \r\n            to = {{\r\n              pathname: \"/ErrorPage\",\r\n              state: {\r\n                error: true,\r\n                errorMessage: this.state.errorMessage\r\n              }\r\n            }}\r\n          />\r\n        }\r\n        if(this.state.empty) {\r\n            return(\r\n                <Form className=\"contenitoreAutenticazione\" onSubmit={this.onSubmitInsert}>\r\n                    <div className=\"contentNewCheckAutenticazione\">\r\n                        <h2>Iscriviti</h2>\r\n                        <p>Si è verificato un errore: {this.state.errorMessage}</p>\r\n                    <Link to=\"/autenticazioneRegistrati\">Torna indietro</Link>\r\n                </div>\r\n                </Form>\r\n            );\r\n        }\r\n        if(this.state.errorPswd) {\r\n            pswdError = (\r\n                <p style = {{color: 'red'}}>Password non coincidenti</p>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <Form className=\"contenitoreAutenticazione\" onSubmit={this.onSubmitInsert}>\r\n                <div className=\"contentNewCheckAutenticazione\">\r\n                    <h2>Iscriviti</h2>\r\n            <Form.Group as={Col} controlId=\"formGridName\">\r\n                        <Form.Label>Nome</Form.Label>\r\n                        <Form.Control type=\"name\" placeholder=\"Nome\" id = 'nome' name = 'nome' onChange={this.onChange} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridSurname\">\r\n                    <Form.Label>Cognome</Form.Label>\r\n                        <Form.Control type=\"surname\" placeholder=\"Cognome\" id = 'cognome' name = 'cognome' onChange={this.onChange} required/>\r\n                    </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>E-mail</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"E-mail\" id = 'email' name = 'email' onChange={this.onChange} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            title=\"Almeno 8 caratteri, una lettera maiuscola e un numero\" \r\n                            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$\"\r\n                            placeholder=\"Password\" \r\n                            id = 'password'\r\n                            name = 'password'\r\n                            onChange={this.onChange} \r\n                            required/>\r\n                    <Form.Label>Conferma password</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            title=\"Almeno 8 caratteri, una lettera maiuscola e un numero\" \r\n                            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$\"\r\n                            placeholder=\"Conferma password\" \r\n                            id = 'confirmPassword'\r\n                            name = 'confirmPassword'\r\n                            onChange={this.onChange} \r\n                            required/>\r\n                        {pswdError}\r\n                    </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridIndirizzo\">\r\n                <Form.Label>Telefono</Form.Label>\r\n                <Form.Control \r\n                    type=\"tel\" \r\n                    placeholder=\"Telefono\" \r\n                    id = 'telefono'\r\n                    name = 'telefono'\r\n                    onChange={this.onChange} \r\n                    required/>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridCap\">\r\n                <Form.Label>Data di nascita</Form.Label>\r\n                <Form.Control type=\"date\" required className=\"inputSignUp\" id = 'nascita' max = {this.state.maxDate} name = 'nascita' onChange={this.onChange} />\r\n                </Form.Group>\r\n                <Link to=\"/autenticazioneRegistrati\">Torna indietro</Link>\r\n            </div>\r\n            \r\n            <Button variant=\"primary\" type=\"submit\" className=\"pulsante\">\r\n                    Registrati\r\n                </Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nexport default autenticazioneRegistratiCliente"]},"metadata":{},"sourceType":"module"}