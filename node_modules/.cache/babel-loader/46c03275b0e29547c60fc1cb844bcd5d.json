{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\Frontend\\\\src\\\\Autenticazione\\\\autenticazioneRegistratiProprietario.js\";\nimport React from 'react';\nimport { Form, Col, Button } from 'react-bootstrap'; //import { Row } from 'react-bootstrap\n\nimport { Link } from 'react-router-dom';\nimport './autenticazione.css';\nimport { Redirect } from 'react-router-dom';\n\nclass autenticazioneRegistratiProprietario extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmitInsert = e => {\n      e.preventDefault();\n      const data = {\n        email: this.state.email,\n        password: this.state.password,\n        nome: this.state.nome,\n        cognome: this.state.cognome,\n        nascita: new Date(this.state.nascita).toLocaleDateString(),\n        num_documento: this.state.num_documento,\n        telefono: this.state.telefono\n      };\n      fetch('http://localhost:9000/insertProprietario/new', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.text()).then(result => {\n        this.setState({\n          apiResponse: JSON.parse(result)\n        });\n        var res = JSON.parse(result);\n\n        if (res.length < 1 || res.code && res.code === 404) {\n          this.setState({\n            empty: true,\n            errorMessage: res.message\n          });\n        } else if (this.state.apiResponse.status === 'error') {\n          this.setState({\n            error: true\n          });\n          this.setState({\n            errorMessage: this.state.apiResponse.message\n          });\n        } else {\n          this.setState({\n            success: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      nome: '',\n      cognome: '',\n      nascita: '',\n      num_documento: '',\n      telefono: '',\n      apiResponse: [],\n      error: false,\n      errorMessage: '',\n      success: false,\n      empty: false,\n      maxDate: ''\n    };\n  }\n\n  componentDidMount() {\n    var today = new Date();\n    const offset = today.getTimezoneOffset();\n    today = new Date(today.getTime() - offset * 60 * 1000);\n    this.setState({\n      maxDate: today.toISOString().slice(0, 10)\n    });\n  }\n\n  render() {\n    if (this.state.success) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Errore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, \"Registrazione avvenuta con successo!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, \"Effettua pure il login, e comincia a navigare dove preferisci\"));\n    } else if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: this.state.errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }\n      });\n    } else if (this.state.errorMessage) {\n      return /*#__PURE__*/React.createElement(Form, {\n        className: \"contenitoreAutenticazione\",\n        onSubmit: this.props.onSubmitInsert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contentNewCheckAutenticazione\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, \"Iscriviti\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, \"Si \\xE8 verificato un errore: \", this.state.errorMessage), /*#__PURE__*/React.createElement(Link, {\n        to: \"/autenticazioneRegistrati\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, \"Torna indietro\")));\n    } else {\n      return /*#__PURE__*/React.createElement(Form, {\n        className: \"contenitoreAutenticazione\",\n        onSubmit: this.props.onSubmitInsert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contentNewCheckAutenticazione\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, \"Iscriviti\"), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      }, \"Nome\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"name\",\n        placeholder: \"Nome\",\n        id: \"nome\",\n        name: \"nome\",\n        onChange: this.onChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridSurname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }, \"Cognome\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"surname\",\n        placeholder: \"Cognome\",\n        id: \"cognome\",\n        name: \"cognome\",\n        onChange: this.onChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }, \"E-mail\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"E-mail\",\n        id: \"email\",\n        name: \"email\",\n        onChange: this.onChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        id: \"password\",\n        name: \"password\",\n        onChange: this.onChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridIndirizzo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }\n      }, \"Telefono\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"tel\",\n        placeholder: \"Telefono\",\n        id: \"telefono\",\n        name: \"telefono\",\n        onChange: this.onChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridIndirizzo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }\n      }, \"Numero documento\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"tel\",\n        placeholder: \"Numero documento\",\n        id: \"num_documento\",\n        name: \"num_documento\",\n        onChange: this.onChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridCap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }\n      }, \"Data di nascita\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"date\",\n        required: true,\n        className: \"inputSignUp\",\n        onChange: this.onChange,\n        id: \"nascita\",\n        name: \"nascita\",\n        max: this.state.maxDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Link, {\n        to: \"/autenticazioneRegistrati\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, \"Torna indietro\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        className: \"pulsante\",\n        onClick: this.onSubmitInsert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }, \"Registrati\"));\n    }\n  }\n\n}\n\nexport default autenticazioneRegistratiProprietario;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/Frontend/src/Autenticazione/autenticazioneRegistratiProprietario.js"],"names":["React","Form","Col","Button","Link","Redirect","autenticazioneRegistratiProprietario","Component","constructor","props","onChange","e","setState","target","name","value","onSubmitInsert","preventDefault","data","email","state","password","nome","cognome","nascita","Date","toLocaleDateString","num_documento","telefono","fetch","method","headers","body","JSON","stringify","then","result","text","apiResponse","parse","res","length","code","empty","errorMessage","message","status","error","success","maxDate","componentDidMount","today","offset","getTimezoneOffset","getTime","toISOString","slice","render","pathname"],"mappings":"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","sourcesContent":["import React from 'react';    \r\nimport {Form, Col, Button} from 'react-bootstrap'\r\n//import { Row } from 'react-bootstrap\r\nimport {Link} from 'react-router-dom'\r\nimport './autenticazione.css'\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass autenticazioneRegistratiProprietario extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            nome: '',\r\n            cognome: '',\r\n            nascita: '',\r\n            num_documento: '',\r\n            telefono: '',\r\n            apiResponse: [],\r\n            error:false,\r\n            errorMessage:'',\r\n            success: false, \r\n            empty: false,\r\n            maxDate: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        var today = new Date();\r\n        const offset = today.getTimezoneOffset()\r\n        today = new Date(today.getTime() - (offset*60*1000))\r\n        \r\n        this.setState({ maxDate: today.toISOString().slice(0,10) })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitInsert = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            nome: this.state.nome,\r\n            cognome: this.state.cognome,\r\n            nascita: new Date(this.state.nascita).toLocaleDateString(),\r\n            num_documento: this.state.num_documento,\r\n            telefono: this.state.telefono\r\n        }\r\n\r\n        fetch('http://localhost:9000/insertProprietario/new', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((result) => result.text())\r\n        .then((result)=>{\r\n            this.setState({ apiResponse:JSON.parse(result) });\r\n            var res = JSON.parse(result);\r\n\r\n            if(res.length < 1 || (res.code && res.code === 404)) {\r\n              this.setState({ empty: true, errorMessage: res.message });\r\n            }\r\n      \r\n            else if(this.state.apiResponse.status === 'error') {\r\n              this.setState({ error: true });\r\n              this.setState({ errorMessage: this.state.apiResponse.message });\r\n            }\r\n            else {\r\n                this.setState({ success: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.success) {\r\n            return (\r\n                <div className = 'Errore'>\r\n                    <h1>Registrazione avvenuta con successo!</h1>\r\n                    <p>Effettua pure il login, e comincia a navigare dove preferisci</p>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.state.error) {\r\n            return <Redirect \r\n            to = {{\r\n              pathname: \"/ErrorPage\",\r\n              state: {\r\n                error: true,\r\n                errorMessage: this.state.errorMessage\r\n              }\r\n            }}\r\n          />\r\n        }\r\n        else if(this.state.errorMessage) {\r\n            return (\r\n                <Form className=\"contenitoreAutenticazione\" onSubmit={this.props.onSubmitInsert}>\r\n                    <div className=\"contentNewCheckAutenticazione\">\r\n                        <h2>Iscriviti</h2>\r\n                        <p>Si è verificato un errore: {this.state.errorMessage}</p>\r\n\r\n                        <Link to=\"/autenticazioneRegistrati\">Torna indietro</Link>\r\n                    </div>\r\n                </Form>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Form className=\"contenitoreAutenticazione\" onSubmit={this.props.onSubmitInsert}>\r\n                    <div className=\"contentNewCheckAutenticazione\">\r\n                        <h2>Iscriviti</h2>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridName\">\r\n                            <Form.Label>Nome</Form.Label>\r\n                            <Form.Control \r\n                                type = \"name\" \r\n                                placeholder = \"Nome\" \r\n                                id = 'nome'\r\n                                name = 'nome'\r\n                                onChange = {this.onChange} \r\n                                required \r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridSurname\">\r\n                            <Form.Label>Cognome</Form.Label>\r\n                            <Form.Control \r\n                                type = \"surname\" \r\n                                placeholder = \"Cognome\" \r\n                                id = 'cognome'\r\n                                name = 'cognome'\r\n                                onChange = {this.onChange} \r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>E-mail</Form.Label>\r\n                            <Form.Control \r\n                                type = \"email\" \r\n                                placeholder = \"E-mail\" \r\n                                id = 'email'\r\n                                name = 'email'\r\n                                onChange = {this.onChange} \r\n                                required \r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                                type = \"password\" \r\n                                placeholder = \"Password\" \r\n                                id = 'password'\r\n                                name = 'password'\r\n                                onChange = {this.onChange} \r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridIndirizzo\">\r\n                            <Form.Label>Telefono</Form.Label>\r\n                            <Form.Control \r\n                                type = \"tel\" \r\n                                placeholder = \"Telefono\" \r\n                                id = 'telefono'\r\n                                name = 'telefono'\r\n                                onChange = {this.onChange} \r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridIndirizzo\">\r\n                            <Form.Label>Numero documento</Form.Label>\r\n                            <Form.Control \r\n                                type = \"tel\" \r\n                                placeholder = \"Numero documento\" \r\n                                id = 'num_documento'\r\n                                name = 'num_documento'\r\n                                onChange = {this.onChange} \r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridCap\">\r\n                            <Form.Label>Data di nascita</Form.Label>\r\n                            <Form.Control \r\n                                type=\"date\" \r\n                                required \r\n                                className=\"inputSignUp\" \r\n                                onChange={this.onChange} \r\n                                id = 'nascita'\r\n                                name = 'nascita'\r\n                                max = {this.state.maxDate}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Link to=\"/autenticazioneRegistrati\">Torna indietro</Link>\r\n                    </div>\r\n                \r\n                    <Button variant=\"primary\" className=\"pulsante\" onClick = {this.onSubmitInsert}>\r\n                        Registrati\r\n                    </Button>\r\n                </Form>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default autenticazioneRegistratiProprietario"]},"metadata":{},"sourceType":"module"}